{"version":3,"sources":["keycodes.js","tts.js","soundObject.js","scrollingText.js","player.js","menuItem.js","utilities.js","strings.js","input.js","menu.js","oldtimer.js","howler.js","soundSource.js","soundHandler.js","timer.js","game.js","stateMachine.js","menuHandler.js","main.js"],"names":["KeyEvent","DOM_VK_CANCEL","DOM_VK_HELP","DOM_VK_BACK_SPACE","DOM_VK_TAB","DOM_VK_CLEAR","DOM_VK_RETURN","DOM_VK_ENTER","DOM_VK_SHIFT","DOM_VK_CONTROL","DOM_VK_ALT","DOM_VK_PAUSE","DOM_VK_CAPS_LOCK","DOM_VK_ESCAPE","DOM_VK_SPACE","DOM_VK_PAGE_UP","DOM_VK_PAGE_DOWN","DOM_VK_END","DOM_VK_HOME","DOM_VK_LEFT","DOM_VK_UP","DOM_VK_RIGHT","DOM_VK_DOWN","DOM_VK_PRINTSCREEN","DOM_VK_INSERT","DOM_VK_DELETE","DOM_VK_0","DOM_VK_1","DOM_VK_2","DOM_VK_3","DOM_VK_4","DOM_VK_5","DOM_VK_6","DOM_VK_7","DOM_VK_8","DOM_VK_9","DOM_VK_SEMICOLON","DOM_VK_EQUALS","DOM_VK_A","DOM_VK_B","DOM_VK_C","DOM_VK_D","DOM_VK_E","DOM_VK_F","DOM_VK_G","DOM_VK_H","DOM_VK_I","DOM_VK_J","DOM_VK_K","DOM_VK_L","DOM_VK_M","DOM_VK_N","DOM_VK_O","DOM_VK_P","DOM_VK_Q","DOM_VK_R","DOM_VK_S","DOM_VK_T","DOM_VK_U","DOM_VK_V","DOM_VK_W","DOM_VK_X","DOM_VK_Y","DOM_VK_Z","DOM_VK_CONTEXT_MENU","DOM_VK_NUMPAD0","DOM_VK_NUMPAD1","DOM_VK_NUMPAD2","DOM_VK_NUMPAD3","DOM_VK_NUMPAD4","DOM_VK_NUMPAD5","DOM_VK_NUMPAD6","DOM_VK_NUMPAD7","DOM_VK_NUMPAD8","DOM_VK_NUMPAD9","DOM_VK_MULTIPLY","DOM_VK_ADD","DOM_VK_SEPARATOR","DOM_VK_SUBTRACT","DOM_VK_DECIMAL","DOM_VK_DIVIDE","DOM_VK_F1","DOM_VK_F2","DOM_VK_F3","DOM_VK_F4","DOM_VK_F5","DOM_VK_F6","DOM_VK_F7","DOM_VK_F8","DOM_VK_F9","DOM_VK_F10","DOM_VK_F11","DOM_VK_F12","DOM_VK_F13","DOM_VK_F14","DOM_VK_F15","DOM_VK_F16","DOM_VK_F17","DOM_VK_F18","DOM_VK_F19","DOM_VK_F20","DOM_VK_F21","DOM_VK_F22","DOM_VK_F23","DOM_VK_F24","DOM_VK_NUM_LOCK","DOM_VK_SCROLL_LOCK","DOM_VK_COMMA","DOM_VK_PERIOD","DOM_VK_SLASH","DOM_VK_BACK_QUOTE","DOM_VK_OPEN_BRACKET","DOM_VK_BACK_SLASH","DOM_VK_CLOSE_BRACKET","DOM_VK_QUOTE","DOM_VK_META","useWebTTS","TTS","constructor","webTTS","synth","window","speechSynthesis","speak","text","utterThis","SpeechSynthesisUtterance","stop","document","getElementById","innerHTML","para","createElement","appendChild","createTextNode","setWebTTS","tts","speech","isElectron","playOnceTimer","SoundObjectItem","file","callback","tag","stream","that","fileName","sound","src","html5","onload","doneLoading","timeout","setTimeout","checkProgress","loaded","timeToLoad","performance","now","state","clearTimeout","play","pause","destroy","unload","volume","v","loop","playing","playbackRate","rate","pitch","currentTime","seek","duration","position","time","SoundObject","sounds","Array","oneShots","debug","loadingQueue","queueCallback","loadedSounds","loadingSounds","loadedCallback","queue","queueLength","statusCallback","extension","directory","oneShotSound","setStatusCallback","findSound","i","findSoundIndex","resetQueuedInstance","length","splice","create","returnObject","push","enqueue","loadQueue","handleQueue","setQueueCallback","resetQueue","console","log","setCallback","result","isLoading","loading","stillLoading","playOnce","so","toDestroy","on","oneShotSounds","noMore","filename","found","kill","runningText","undefined","ScrollingText","delimiter","splitText","split","currentLine","sndOpen","sndContinue","sndClose","id","init","addEventListener","handleKeys","readCurrentLine","event","which","advance","handleTap","action","removeEventListener","Player","beatcoins","pack","actionKeys","unlocks","MenuTypes","NORMAL","SELECTOR","SLIDER","EDIT","MenuItem","name","type","select","SelectorItem","options","defaultOption","selectCallback","currentOption","increase","decrease","SliderItem","from","to","currentValue","minValue","maxValue","EditItem","defaultText","addChar","char","removeChar","substring","GameUtils","progressPan","current","max","progressPitch","distance3D","x1","y1","z1","x2","y2","z2","Math","sqrt","distance","jx","jy","kx","ky","calculateAngle","angle","atan2","PI","isCollide3D","a","b","x","width","y","height","z","depth","randomInt","min","floor","random","getRandomArbitrary","sleep","ms","Promise","resolve","percent","int1","int2","utils","Strings","strings","mainmenu","mSelect","mReady","mDownloadAll","mUnlocked","dfiles","retrieving","nodown","mDownloadList","mDownloadInstructions","mListen","mStart","mLearn","mActions","dling","dlprog","dlingdone","keymapChoose","packError","intro","keymapStart","tamperWarning","mNew","nopacks","mBrowse","mBrowseIncompleted","mBrowseUnlocked","mHashes","mDownload","get","what","rep","str","forEach","i1","Number","replace","KeyboardInput","keyDown","justPressed","chars","justReleased","justPressedEventCallback","charEventCallback","handleKeyDown","handleKeyUp","handleChar","String","fromCharCode","isDown","isJustPressed","isJustReleased","keysDown","kd","getChars","keysPressed","releaseAllKeys","keysReleased","Menu","menuData","music","cursor","sndKeyChar","sndKeyDelete","sndSliderLeft","sndSliderRight","sndBoundary","sndChoose","sndMove","sndSelector","sndWrap","nextItem","previousItem","insertCharacter","removeCharacter","handleInput","destroySounds","fade","off","run","handleSwipe","selected","items","addItem","value","toReturn","OldTimer","elapsed","paused","lastTime","pauseWhen","started","isActive","reset","resume","SoundSource","pos","speed","minRate","maxRate","rateShiftSpeed","currentPosition","update","setDoppler","direction","freq","setSpeed","SoundHandler","directional","staticSounds","dynamicSounds","currentDynamicSound","maxDynamicSounds","currentStaticSound","maxStaticSounds","reuseSounds","playStatic","slot","findFreeStaticSlot","SoundItem","findFreeDynamicSlot","findDynamicSound","reuse","threeD","Game","totalScore","totalAverage","scoreAverage","levelAverage","scoreCounter","canPause","actionCompleted","scoreTimer","pauseTime","timer","score","pool","bpms","level","fileData","input","levels","setup","existsSync","readFileSync","error","setState","actions","keys","dt","render","setupLevel","queueLevels","currentAction","fail","numberOfActions","doScore","snd","failsound","quit","calculateScore","winSound","preSound","change","unpause","start","bpm","ceil","abs","mod","levelLimit","StateMachine","currentState","once","keydown","st","mainMenu","fs","require","s","learnPack","browsePacks","rebuildHashes","question","checkPack","downloadPacks","save","listenPack","booter","boot","mangle","lang","langs","data","packdir","homedir","cash","proceed","browsing","packs","JSON","parse","decrypt","err","browseArray","browsePosition","sort","nameA","toLowerCase","nameB","exitNow","size","filesSync","pb","pf","stat","hash","preview","slice","silent","corrupts","newHash","dirsSync","next","theFiles","path","levelsa","temp","write","stringify","encrypt","writeFileSync","localizedValues","dm","download","url","dest","cb","http","createWriteStream","request","response","pipe","close","arr","dlList","remoteHashes","localHashes","fetch","then","shouldPush","l","downloadSelections","sizeS","toFixed","anotherSelected","dls","snds","evt","dSize","prog","toDownload","prevPercent","datas","dir","dlCounter","dests","ii","dirsplit","unlinkSync","mkdirSync","currentIndex","threads","eachOfLimit","fileUrl","index","inp","mus","lock","unlocked","bootSound","c1","c2","positive","count"],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClER;;;;;QAWsBC,WAAAA;;AATtB;;AACA;;AAEA;;AACA;;AACA;;AAGA;;AACO,eAAeA,QAAf,GAA0B;AACjC,OAAMC,KAAGC,QAAQ,IAAR,CAAT;AACC9W,QAAOlB,MAAP,GAAc,IAAd;AACA,OAAMgS,QAAQ,IAAIpO,KAAJ,EAAd;AACAoO,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,QAAb,CAAhB,CAAX;AACDqD,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,QAAb,CAAhB,CAAX;AACAqD,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,SAAb,EAAuB,CAAC,WAAK5G,SAAN,CAAvB,CAAhB,CAAX;AACAiK,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,iBAAb,CAAhB,CAAX;AACAqD,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,oBAAb,CAAhB,CAAX;AACAqD,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,WAAb,CAAhB,CAAX;AACAqD,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,WAAb,EAAyB,CAAC,WAAKzG,OAAL,aAAmB,OAAnB,CAAD,CAAzB,CAAhB,CAAX;AACA8J,OAAM7M,IAAN,CAAW,uBAAa,CAAb,EAAgB,iBAAQwJ,GAAR,CAAa,SAAb,CAAhB,CAAX;AACA,iBAAGnK,SAAH,GAAe,WAAf;AACA,OAAMsT,WAAW,eAAS,iBAAQnJ,GAAR,CAAY,UAAZ,CAAT,EAAkCqD,KAAlC,CAAjB;AACA,iBAAGxN,SAAH,GAAe,EAAf;AACAsT,UAASpH,KAAT,GAAiB,gBAAU,MAA3B;AACA,KAAIqH,GAAGlC,UAAH,CAAc,gBAAU,YAAxB,CAAJ,EAA2C;AAC1CiC,WAAS7G,SAAT,CAAmBpO,MAAnB;AACAiV,WAAS7G,SAAT,GAAqB,gBAAGhM,MAAH,CAAU,gBAAU,QAApB,CAArB;AACA;AACA6S,UAASjG,GAAT,CAAaoG,KAAK;AACjB,kBAAGzT,SAAH,GAAe,WAAf;AACA,UAAQyT,EAAElG,QAAV;AACC,QAAK,CAAL;AAAQ,qBAAGiE,QAAH,CAAY,CAAZ,EAAgB;AACxB,QAAK,CAAL;AAAQ,qBAAGA,QAAH,CAAY,CAAZ,EAAgB;AACxB,QAAK,CAAL;AACD,qBAAGA,QAAH,CAAY,CAAZ,EAAgB;AACf,QAAK,CAAL;AAAQ,+BAAiB;AACzB,QAAK,CAAL;AAAQ,+BAAiB;AACzB,QAAK,CAAL;AACD,qBAAGA,QAAH,CAAY,CAAZ,EAAgB;AAChB,QAAK,CAAL;AACA,qBAAGA,QAAH,CAAY,CAAZ,EAAgB;AAChB,QAAK,CAAL;AACA,qBAAGA,QAAH,CAAY,CAAZ,EAAgB;;AAZhB;AAgBA,EAlBD;AAmBA","file":"main.map","sourceRoot":"js","sourcesContent":["\r\n'use strict';\r\nif (typeof KeyEvent === 'undefined') {\r\n\tvar KeyEvent = {\r\n\t\tDOM_VK_CANCEL: 3,\r\n\t\tDOM_VK_HELP: 6,\r\n\t\tDOM_VK_BACK_SPACE: 8,\r\n\t\tDOM_VK_TAB: 9,\r\n\t\tDOM_VK_CLEAR: 12,\r\n\t\tDOM_VK_RETURN: 13,\r\n\t\tDOM_VK_ENTER: 14,\r\n\t\tDOM_VK_SHIFT: 16,\r\n\t\tDOM_VK_CONTROL: 17,\r\n\t\tDOM_VK_ALT: 18,\r\n\t\tDOM_VK_PAUSE: 19,\r\n\t\tDOM_VK_CAPS_LOCK: 20,\r\n\t\tDOM_VK_ESCAPE: 27,\r\n\t\tDOM_VK_SPACE: 32,\r\n\t\tDOM_VK_PAGE_UP: 33,\r\n\t\tDOM_VK_PAGE_DOWN: 34,\r\n\t\tDOM_VK_END: 35,\r\n\t\tDOM_VK_HOME: 36,\r\n\t\tDOM_VK_LEFT: 37,\r\n\t\tDOM_VK_UP: 38,\r\n\t\tDOM_VK_RIGHT: 39,\r\n\t\tDOM_VK_DOWN: 40,\r\n\t\tDOM_VK_PRINTSCREEN: 44,\r\n\t\tDOM_VK_INSERT: 45,\r\n\t\tDOM_VK_DELETE: 46,\r\n\t\tDOM_VK_0: 48,\r\n\t\tDOM_VK_1: 49,\r\n\t\tDOM_VK_2: 50,\r\n\t\tDOM_VK_3: 51,\r\n\t\tDOM_VK_4: 52,\r\n\t\tDOM_VK_5: 53,\r\n\t\tDOM_VK_6: 54,\r\n\t\tDOM_VK_7: 55,\r\n\t\tDOM_VK_8: 56,\r\n\t\tDOM_VK_9: 57,\r\n\t\tDOM_VK_SEMICOLON: 59,\r\n\t\tDOM_VK_EQUALS: 61,\r\n\t\tDOM_VK_A: 65,\r\n\t\tDOM_VK_B: 66,\r\n\t\tDOM_VK_C: 67,\r\n\t\tDOM_VK_D: 68,\r\n\t\tDOM_VK_E: 69,\r\n\t\tDOM_VK_F: 70,\r\n\t\tDOM_VK_G: 71,\r\n\t\tDOM_VK_H: 72,\r\n\t\tDOM_VK_I: 73,\r\n\t\tDOM_VK_J: 74,\r\n\t\tDOM_VK_K: 75,\r\n\t\tDOM_VK_L: 76,\r\n\t\tDOM_VK_M: 77,\r\n\t\tDOM_VK_N: 78,\r\n\t\tDOM_VK_O: 79,\r\n\t\tDOM_VK_P: 80,\r\n\t\tDOM_VK_Q: 81,\r\n\t\tDOM_VK_R: 82,\r\n\t\tDOM_VK_S: 83,\r\n\t\tDOM_VK_T: 84,\r\n\t\tDOM_VK_U: 85,\r\n\t\tDOM_VK_V: 86,\r\n\t\tDOM_VK_W: 87,\r\n\t\tDOM_VK_X: 88,\r\n\t\tDOM_VK_Y: 89,\r\n\t\tDOM_VK_Z: 90,\r\n\t\tDOM_VK_CONTEXT_MENU: 93,\r\n\t\tDOM_VK_NUMPAD0: 96,\r\n\t\tDOM_VK_NUMPAD1: 97,\r\n\t\tDOM_VK_NUMPAD2: 98,\r\n\t\tDOM_VK_NUMPAD3: 99,\r\n\t\tDOM_VK_NUMPAD4: 100,\r\n\t\tDOM_VK_NUMPAD5: 101,\r\n\t\tDOM_VK_NUMPAD6: 102,\r\n\t\tDOM_VK_NUMPAD7: 103,\r\n\t\tDOM_VK_NUMPAD8: 104,\r\n\t\tDOM_VK_NUMPAD9: 105,\r\n\t\tDOM_VK_MULTIPLY: 106,\r\n\t\tDOM_VK_ADD: 107,\r\n\t\tDOM_VK_SEPARATOR: 108,\r\n\t\tDOM_VK_SUBTRACT: 109,\r\n\t\tDOM_VK_DECIMAL: 110,\r\n\t\tDOM_VK_DIVIDE: 111,\r\n\t\tDOM_VK_F1: 112,\r\n\t\tDOM_VK_F2: 113,\r\n\t\tDOM_VK_F3: 114,\r\n\t\tDOM_VK_F4: 115,\r\n\t\tDOM_VK_F5: 116,\r\n\t\tDOM_VK_F6: 117,\r\n\t\tDOM_VK_F7: 118,\r\n\t\tDOM_VK_F8: 119,\r\n\t\tDOM_VK_F9: 120,\r\n\t\tDOM_VK_F10: 121,\r\n\t\tDOM_VK_F11: 122,\r\n\t\tDOM_VK_F12: 123,\r\n\t\tDOM_VK_F13: 124,\r\n\t\tDOM_VK_F14: 125,\r\n\t\tDOM_VK_F15: 126,\r\n\t\tDOM_VK_F16: 127,\r\n\t\tDOM_VK_F17: 128,\r\n\t\tDOM_VK_F18: 129,\r\n\t\tDOM_VK_F19: 130,\r\n\t\tDOM_VK_F20: 131,\r\n\t\tDOM_VK_F21: 132,\r\n\t\tDOM_VK_F22: 133,\r\n\t\tDOM_VK_F23: 134,\r\n\t\tDOM_VK_F24: 135,\r\n\t\tDOM_VK_NUM_LOCK: 144,\r\n\t\tDOM_VK_SCROLL_LOCK: 145,\r\n\t\tDOM_VK_COMMA: 188,\r\n\t\tDOM_VK_PERIOD: 190,\r\n\t\tDOM_VK_SLASH: 191,\r\n\t\tDOM_VK_BACK_QUOTE: 192,\r\n\t\tDOM_VK_OPEN_BRACKET: 219,\r\n\t\tDOM_VK_BACK_SLASH: 220,\r\n\t\tDOM_VK_CLOSE_BRACKET: 221,\r\n\t\tDOM_VK_QUOTE: 222,\r\n\t\tDOM_VK_META: 224\r\n\t};\r\n}\r\nexport {KeyEvent};\r\n","'use strict';\r\nconst useWebTTS = true;\r\n\r\nclass TTS {\r\n\tconstructor(webTTS = false) {\r\n\t\tthis.synth = window.speechSynthesis;\r\n\t\tthis.webTTS = webTTS;\r\n\t}\r\n\r\n\tspeak(text) {\r\n\t\tif (this.webTTS) {\r\n\t\t\tconst utterThis = new SpeechSynthesisUtterance(text);\r\n\t\t\tthis.synth.stop();\r\n\t\t\tthis.synth.speak(utterThis);\r\n\t\t} else {\r\n\t\t\tdocument.getElementById('speech').innerHTML = '';\r\n\t\t\tconst para = document.createElement('p');\r\n\t\t\tpara.appendChild(document.createTextNode(text));\r\n\t\t\tdocument.getElementById('speech').appendChild(para);\r\n\t\t}\r\n\t} // End speak()\r\n\r\n\tsetWebTTS(tts) {\r\n\t\tthis.webTTS = tts;\r\n\t}\r\n} // End class\r\nif (typeof speech === 'undefined') {\r\n\tvar speech = new TTS();\r\n}\r\nexport {TTS, speech};\r\n","import {Howl, Howler} from 'howler';\r\nimport {speech} from './tts';\r\n\r\nconst isElectron = true;\r\nlet playOnceTimer;\r\nclass SoundObjectItem {\r\n\tconstructor(file, callback = 0, tag = 0,stream=false) {\r\n\t\tconst that = this;\r\n\t\tthis.fileName = file;\r\n\t\tthis.sound = new Howl({\r\n\t\t\tsrc: file,\r\n\t\t\thtml5:stream,\r\n\t\t\tonload() {\r\n that.doneLoading();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.timeout = setTimeout(() => {\r\n that.checkProgress();\r\n\t\t}, 2000);\r\n\t\tthis.loaded = false;\r\n\t\tthis.callback = callback;\r\n\t\tthis.timeToLoad = performance.now();\r\n\t\tthis.tag = tag;\r\n\t}\r\n\r\n\tcheckProgress() {\r\n\t\tif (this.sound.state() == 'loaded') {\r\n\t\t\tthis.doneLoading();\r\n\t\t} else {\r\n\t\t\tconst that = this;\r\n\t\t\tthis.timeout = setTimeout(() => {\r\n that.checkProgress();\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t}\r\n\r\n\tdoneLoading() {\r\n\t\t\tclearTimeout(this.timeout);\r\n\t\t\tthis.loaded = true;\r\n\t\t\tif (this.callback != 0) {\r\n\t\t\tthis.callback();\r\n\t\t\t}\r\n\t}\r\n\r\n\tplay() {\r\n\t\tthis.sound.play();\r\n\t}\r\n\r\n\tstop() {\r\n\t\tthis.sound.stop();\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.sound.pause();\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\t\t\t\tthis.sound.unload();\r\n\t}\r\n\r\n\tunload() {\r\n\t\tthis.sound.unload();\r\n\t}\r\n\r\n\tget volume() {\r\n\t\treturn this.sound.volume();\r\n\t}\r\n\r\n\tset volume(v) {\r\n\t\treturn this.sound.volume(v);\r\n\t}\r\n\r\n\tset loop(v) {\r\n\t\treturn this.sound.loop(v);\r\n\t}\r\n\r\n\tget loop() {\r\n\t\treturn this.sound.loop();\r\n\t}\r\n\tget playing() {\r\n\t\treturn this.sound.playing();\r\n\t}\r\n\tget playbackRate() {\r\n\t\treturn this.sound.rate();\r\n\t}\r\n\r\n\tset playbackRate(v) {\r\n\t\treturn this.sound.rate(v);\r\n\t}\r\nget pitch() {\r\n\t\treturn this.sound.rate();\r\n\t}\r\n\r\n\tset pitch(v) {\r\n\t\treturn this.sound.rate(v);\r\n\t}\r\n\r\n\tget currentTime() {\r\n\t\treturn this.sound.seek();\r\n\t}\r\n\r\n\tget duration() {\r\n\t\treturn this.sound.duration;\r\n\t}\r\n\r\n\tget position() {\r\n\t\treturn this.sound.seek();\r\n\t}\r\n\r\n\tset currentTime(v) {\r\n\t\treturn this.sound.seek(v);\r\n\t}\r\n\r\n\tseek(time) {\r\n\t\treturn this.sound.seek(time);\r\n\t}\r\n}\r\nclass SoundObject {\r\n\tconstructor() {\r\n\t\tthis.sounds = new Array();\r\n\t\tthis.oneShots = new Array();\r\n\t\tthis.debug = false;\r\n\t\tthis.loadingQueue = false;\r\n\t\tthis.queueCallback = 0;\r\n\t\tthis.loadedSounds = 0;\r\n\t\tthis.loadingSounds = 0;\r\n\t\tthis.loadedCallback = 0;\r\n\t\tthis.queue = new Array();\r\n\t\tthis.queueLength = 0;\r\n\t\tthis.statusCallback = null;\r\n\r\n\t\tthis.extension = '.ogg';\r\n\t\tif (isElectron == true) {\r\n\t\t\tthis.directory = './sounds/';\r\n\t\t} else {\r\n\t\t\tthis.directory = '../soundsopus/';\r\n\t\t\tthis.extension = '.opus';\r\n\t\t}\r\n\r\n\t\tthis.oneShotSound = null;\r\n\t}\r\n\r\n\tsetStatusCallback(callback) {\r\n\t\tthis.statusCallback = callback;\r\n\t}\r\n\r\n\tfindSound(file) {\r\n\t\tfor (const i in this.sounds) {\r\n\t\t\tif (this.sounds[i].fileName == file) {\r\n\t\t\t\treturn this.sounds[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfindSoundIndex(file) {\r\n\t\tfor (const i in this.sounds) {\r\n\t\t\tif (this.sounds[i].fileName == file) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tresetQueuedInstance() {\r\n\t\tfor (let i = 0; i < this.sounds.length; i++) {\r\n\t\t\tif (typeof this.sounds[i] !== 'undefined') {\r\n\t\t\t\tif (this.sounds[i].tag == 1) {\r\n\t\t\t\t\t\t\t\t\tthis.sounds[i].sound.unload();\r\n\t\t\t\t\tthis.sounds.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.loadingQueue = false;\r\n\t\tthis.queueCallback = 0;\r\n\t\tthis.loadedSounds = 0;\r\n\t\tthis.loadingSounds = 0;\r\n\t\tthis.loadedCallback = 0;\r\n\t\tthis.queue = new Array();\r\n\t\tthis.queueLength = 0;\r\n\t\tthis.statusCallback = null;\r\n\t}\r\n\r\n\tcreate(file,stream=false) {\r\n\t\tfile = this.directory + file + this.extension;\r\n\t\tlet returnObject = null;\r\n\t\tconst that = this;\r\n\t\treturnObject = new SoundObjectItem(file, (() => {\r\n that.doneLoading();\r\n\t\t}),0,stream);\r\n\t\t\t\t\t\t\t\t\t\tthis.sounds.push(returnObject);\r\n\t\t\t\t\t\t\t\treturn returnObject;\r\n\t}\r\n\r\n\tenqueue(file) {\r\n\t\tfile = this.directory + file + this.extension;\r\n\t\tthis.queue.push(file);\r\n\t\tthis.queueLength = this.queue.length;\r\n\t}\r\n\r\n\tloadQueue() {\r\n\t\t\tthis.handleQueue();\r\n\t\t\tthis.loadingQueue = true;\r\n\t}\r\n\r\n\tsetQueueCallback(callback) {\r\n\t\tthis.queueCallback = callback;\r\n\t}\r\n\r\n\tresetQueue() {\r\n\t\tthis.queue = new Array();\r\n\t\tthis.loadingQueue = false;\r\n\t}\r\n\r\n\thandleQueue() {\r\n\t\tif (this.queue.length > 0) {\r\n\t\t\tconst that = this;\r\n\t\t\tif (typeof this.statusCallback !== 'undefined' && this.statusCallback != null) {\r\n\t\t\t\tthis.statusCallback(1 - this.queue.length / this.queueLength);\r\n\t\t\t}\r\n\t\t\tif (this.findSound(this.queue[0]) != -1) {\r\n\t\t\t\tthis.queue.splice(0, 1);\r\n\t\t\t\tthis.handleQueue();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.sounds.push(new SoundObjectItem(this.queue[0], (() => {\r\n that.handleQueue();\r\n\t\t\t}), 1));\r\n\t\t\tthis.queue.splice(0, 1);\r\n\t\t} else {\r\n\t\t\tthis.loadingQueue = false;\r\n\t\t\t\tconsole.log('finished with queue.');\r\n\t\t\t\tif (typeof this.queueCallback !== 'undefined' && this.queueCallback != 0) {\r\n\t\t\t\t\tthis.queueCallback();\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetCallback(callback) {\r\n\t\tthis.loadedCallback = callback;\r\n\t}\r\n\r\n\tdoneLoading() {\r\n\t\tconst result = this.isLoading();\r\n\r\n\t\tif (result == 1) {\r\n\t\t\tif (typeof this.loadedCallback !== 'undefined' && this.loadedCallback != 0 && this.loadedCallback != null) {\r\n\t\t\t\tthis.loadedCallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisLoading() {\r\n\t\tconst loading = 0;\r\n\t\tthis.loadedSounds = 0;\r\n\t\tthis.loadingSounds = 0;\r\n\t\tconst stillLoading = new Array();\r\n\t\tfor (let i = 0; i < this.sounds.length; i++) {\r\n\t\t\tif (typeof this.sounds[i] !== 'undefined') {\r\n\t\t\t\tif (this.sounds[i].loaded == false) {\r\n\t\t\t\t\tthis.loadingSounds++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loadedSounds++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.loadedSounds / this.sounds.length;\r\n\t}\r\n\r\n\tplayOnce(file) {\r\n\t\tthis.oneShotSound = so.create(file);\r\n\t\tthis.oneShots.push(this.oneShotSound);\r\n\t\tthis.oneShotSound.play();\r\n\t\tconst toDestroy = new Array();\r\n\t\tconst that = this;\r\n\t\tthis.oneShotSound.on('ended', () => {\r\n\t\t\tfor (var i = 0; i < that.oneShots.length; i++) {\r\n\t\t\t\tif (that.oneShots[i].playing == false) {\r\nthat.oneShots[i].unload();\r\ntoDestroy.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < toDestroy.length; i++) {\r\n\t\t\t\tif (that.oneShotSounds[i].playing == false) {\r\n\t\t\t\tthat.oneShotSounds.splice(toDestroy[i], 1);\r\n\t\t\t\t\t\t\t\t\tspeech.speak('destroyed.' + toDestroy[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t });\r\n\t}\r\n\r\n\tdestroy(file, callback = 0) {\r\n\t\tlet noMore = false;\r\n\t\tconst filename = this.directory + file + this.extension;\r\n\t\twhile (!noMore) {\r\n\t\t\tconst found = this.findSoundIndex(filename);\r\n\t\t\t\t\t\t\tconsole.log('found ' + found);\r\n\t\t\t\t\t\t\tif (found == -1) {\r\n\t\t\t\t\t\t\t\tnoMore = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sounds[found].sound.unload();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('state after destroy' + this.sounds[found].sound.state());\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.sounds.splice(found, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('destroyed ' + this.sounds.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t}\r\n\t\tif (callback != 0) {\r\ncallback();\r\n\t\t}\r\n\t}\r\n\r\n\tkill(callback = 0) {\r\n\t\twhile (this.sounds.length > 0) {\r\n\t\t\t\t\tthis.sounds.splice(0, 1);\r\n\t\t}\r\n\t\t\t\tHowler.unload();\r\n\t\t\t\tif (callback != 0) {\r\ncallback();\r\n\t\t\t\t}\r\n\t}\r\n}\r\nconst so = new SoundObject();\r\nexport {so};\r\n","'use strict';\r\nimport $ from 'jquery';\r\nimport {KeyEvent} from './keycodes';\r\nimport {so} from './soundObject';\r\nimport {TTS, useWebTTS} from './tts';\r\n\r\nif (typeof speech === 'undefined') {\r\n\tvar speech = new TTS();\r\n}\r\nif (runningText == undefined) {\r\n\tvar runningText = 0;\r\n}\r\nclass ScrollingText {\r\n\tconstructor(text, delimiter = '\\n', callback = 0) {\r\n\t\tthis.text = text;\r\n\t\tthis.delimiter = delimiter;\r\n\t\tthis.splitText = this.text.split(delimiter);\r\n\t\tthis.currentLine = 0;\r\n\t\tthis.sndOpen = so.create('UI/textOpen');\r\n\t\tthis.sndContinue = so.create('UI/textScroll');\r\n\t\tthis.sndClose = so.create('UI/textClose');\r\n\t\tthis.callback = callback;\r\n\t\tconst id = document.getElementById('touchArea');\r\n\t\t// This.hammer = new Hammer(id);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst that = this;\r\n\t\trunningText = this;\r\n\t\tdocument.addEventListener('keydown', this.handleKeys);\r\n\t\t// This.hammer.on(\"swipeleft swiperight\", function() { that.handleTap(0); });\r\n\t\t// this.hammer.on(\"tap\", function() { that.handleTap(1); });\r\n\t\tthis.sndOpen.play();\r\n\t\tthis.currentLine = 0;\r\n\t\tthis.readCurrentLine();\r\n\t}\r\n\r\n\thandleKeys(event) {\r\n\t\tswitch (event.which) {\r\n\t\t\tcase KeyEvent.DOM_VK_UP:\r\n\t\t\tcase KeyEvent.DOM_VK_DOWN:\r\n\t\t\tcase KeyEvent.DOM_VK_LEFT:\r\n\t\t\tcase KeyEvent.DOM_VK_RIGHT:\r\n\t\t\t\trunningText.readCurrentLine();\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_RETURN:\r\n\t\t\t\trunningText.advance();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\thandleTap(action) {\r\n\t\tif (action == 0) {\r\n\t\t\tthis.readCurrentLine();\r\n\t\t}\r\n\r\n\t\tif (action == 1) {\r\n\t\t\tthis.advance();\r\n\t\t}\r\n\t}\r\n\r\n\treadCurrentLine() {\r\n\t\tspeech.speak(this.splitText[this.currentLine]);\r\n\t}\r\n\r\n\tadvance() {\r\n\t\tif (this.currentLine < this.splitText.length - 1) {\r\n\t\t\tthis.currentLine++;\r\n\t\t\tthis.sndContinue.play();\r\n\t\t\tthis.readCurrentLine();\r\n\t\t} else {\r\n\t\t\tthis.sndClose.play();\r\n\t\t\tthis.sndClose.unload();\r\n\t\t\tthis.sndOpen.unload();\r\n\t\t\tthis.sndContinue.unload();\r\ndocument.removeEventListener('keydown', this.handleKeys);\r\n//\t\t\tThis.hammer.unload();\r\nif (this.callback != 0) {\r\nthis.callback();\r\n}\r\n\t\t}\r\n\t}\r\n}\r\nexport {ScrollingText, speech};\r\n","'use strict';\r\nimport fs from 'fs';\r\nimport os from 'os';\r\nimport {KeyEvent} from './keycodes';\r\nimport {pack, packdir} from './main';\r\nimport {ScrollingText} from './scrollingText';\r\n\r\nclass Player {\r\n\tconstructor() {\r\n\t\tthis.beatcoins = 0,\r\n\t\tthis.pack = 'default',\r\n\t\tthis.actionKeys = [0, 0, KeyEvent.DOM_VK_SPACE, KeyEvent.DOM_VK_TAB, KeyEvent.DOM_VK_RETURN, KeyEvent.DOM_VK_BACK_SPACE, KeyEvent.DOM_VK_UP, KeyEvent.DOM_VK_DOWN, KeyEvent.DOM_VK_RIGHT, KeyEvent.DOM_VK_LEFT];\r\n\t\tthis.unlocks = {}\r\n\t\t\tthis.unlocks[\"default\"]={ \r\n\t\t\t\"level\":0,\r\n\t\t\t\"insurance\":0,\r\n\t\t\t\"fails\":0,\r\n\t\t\t\"win\":false,\r\n\t\t\t\"average\":0,\r\n\t\t\t\t\t};\r\n\t}\r\n}\r\nexport {Player};\r\n","'use strict';\r\nimport {TTS, useWebTTS} from './tts';\r\n\r\nif (typeof speech === 'undefined') {\r\n\tvar speech = new TTS();\r\n}\r\nconst MenuTypes = {\r\n\tNORMAL: 0,\r\n\tSELECTOR: 1,\r\n\tSLIDER: 2,\r\n\tEDIT: 3\r\n};\r\nclass MenuItem {\r\n\tconstructor(id, name) {\r\n\t\tthis.name = name;\r\n\t\tthis.id = id;\r\n\t\tthis.type = MenuTypes.NORMAL;\r\n\t}\r\n\r\n\tspeak() {\r\n\t\tspeech.speak(this.name);\r\n\t}\r\n\r\n\tselect() {\r\n\t\treturn this.id;\r\n\t}\r\n}\r\n\r\nclass SelectorItem extends MenuItem {\r\n\tconstructor(id, name, options, defaultOption = 0, selectCallback) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.options = options;\r\n\t\tthis.type = MenuTypes.SELECTOR;\r\n\t\tthis.currentOption = defaultOption;\r\n\t\tthis.selectCallback = selectCallback;\r\n\t}\r\n\r\n\tspeak() {\r\n\t\tspeech.speak(this.name + '. Selector. Set to ' + this.options[this.currentOption]);\r\n\t}\r\n\r\n\tincrease() {\r\n\t\tif (this.currentOption < this.options.length - 1) {\r\n\t\t\tthis.currentOption++;\r\n\t\t}\r\n\t\tspeech.speak(this.options[this.currentOption]);\r\n\t\tif (typeof this.selectCallback !== 'undefined') {\r\n\t\t\tthis.selectCallback(this.options[this.currentOption]);\r\n\t\t}\r\n\t}\r\n\r\n\tdecrease() {\r\n\t\tif (this.currentOption > 0) {\r\n\t\t\tthis.currentOption--;\r\n\t\t}\r\n\t\tspeech.speak(this.options[this.currentOption]);\r\n\t\tif (typeof this.selectCallback !== 'undefined') {\r\n\t\t\tthis.selectCallback(this.options[this.currentOption]);\r\n\t\t}\r\n\t}\r\n\r\n\tselect() {\r\n\t\treturn this.id;\r\n\t}\r\n}\r\n\r\nclass SliderItem extends MenuItem {\r\n\tconstructor(id, name, from, to, currentValue = 0) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.minValue = from;\r\n\t\tthis.maxValue = to;\r\n\t\tthis.currentValue = currentValue;\r\n\t\tthis.type = MenuTypes.SLIDER;\r\n\t}\r\n\r\n\tspeak() {\r\n\t\tspeech.speak(this.name + '. Slider. Set to ' + this.currentValue);\r\n\t}\r\n\r\n\tincrease() {\r\n\t\tif (this.currentValue < this.maxValue) {\r\n\t\t\tthis.currentValue++;\r\n\t\t}\r\n\t\tspeech.speak(this.currentValue);\r\n\t}\r\n\r\n\tdecrease() {\r\n\t\tif (this.currentValue > this.minValue) {\r\n\t\t\tthis.currentValue--;\r\n\t\t}\r\n\t\tspeech.speak(this.currentValue);\r\n\t}\r\n\r\n\tselect() {\r\n\t\treturn this.id;\r\n\t}\r\n}\r\n\r\nclass EditItem extends MenuItem {\r\n\tconstructor(id, name, defaultText = '') {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.text = defaultText;\r\n\t\tthis.type = MenuTypes.EDIT;\r\n\t}\r\n\r\n\tspeak() {\r\n\t\tspeech.speak(this.name + '. Editable. ' + (this.text == '' ? 'Nothing entered.' : 'Set to ' + this.text));\r\n\t}\r\n\r\n\taddChar(char) {\r\n\t\tthis.text += char;\r\n\t\tspeech.speak(char);\r\n\t}\r\n\r\n\tremoveChar() {\r\n\t\tthis.text = this.text.substring(0, this.text.length - 1);\r\n\t\tspeech.speak(this.text);\r\n\t}\r\n\r\n\tselect() {\r\n\t\treturn this.text;\r\n\t}\r\n}\r\nexport {MenuItem, MenuTypes};\r\n","'use strict';\r\nclass GameUtils {\r\nprogressPan(current, max) {\r\nreturn ((current*200/max)-100)/100;\r\n}\r\nprogressPitch(current,max) {\r\nreturn ((current*200/max))/100;\r\n}\r\n\tdistance3D(x1, y1, z1, x2, y2, z2) {\r\n\t\treturn Math.sqrt((x2 - x1) * (x2 - x1) +\r\n(y2 - y1) * (y2 - y1) +\r\n(z2 - z1) * (z2 - z1));\r\n\t}\r\n\r\n\tdistance(jx, jy, kx, ky) {\r\n\t// Return Math.hypot(jx-kx, jy-ky)\r\n\t\treturn Math.sqrt(((jx - kx) * (jx - kx)) + ((jy - ky)) * (jy - ky));\r\n\t}\r\n\r\n\tcalculateAngle(x1, y1, x2, y2) {\r\n\t\tlet angle = Math.atan2((y2 - y1), (x2 - x1));\r\n\t\tangle = (angle >= 0) ? 0 : (2 * Math.PI) + angle;\r\n\t\treturn angle;\r\n\t// Return Math.atan2((y2 - y1),(x2 - x1));\r\n\t}\r\n\r\n\tisCollide3D(a, b) {\r\n\t\treturn (a.x <= (b.x + b.width) && (a.x + a.width) >= b.x) && (a.y <= (b.y + b.height) && (a.y + a.height) >= b.y) && (a.z <= (b.z + b.depth) && (a.z + a.depth) >= b.z);\r\n\t}\r\n\r\n\trandomInt(min, max) {\r\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t}\r\n\r\n\tgetRandomArbitrary(min, max) {\r\n\t\treturn Math.random() * (max - min) + min;\r\n\t}\r\n\r\n\tsleep(ms) {\r\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n\t}\r\n\r\n\tpercent(int1, int2) {\r\n\t\treturn int1 * 100 / int2;\r\n\t}\r\n}\r\nexport var utils = new GameUtils();\r\n","'use strict';\r\nimport {lang} from './main';\r\nclass Strings {\r\n\tconstructor() {\r\n\t\tthis.strings = {};\r\n\t\tthis.strings[1] = {\r\n\t\t\t\"mFound\":\"Found %1 new packs: what do you wish to do?\",\r\n\t\t\tmainmenu:\"main menu\",\r\n\t\t\tmSelect:\"Please select\",\r\n\t\t\tmReady: 'Please wait...',\r\n\t\t\tmDownloadAll: 'Download all uninstalled packs (size: %1 %2)',\r\n\t\t\tmUnlocked:\"Listen to unlocked music for this pack (%1 levels)\",\r\n\t\t\tdfiles:\"Downloading %1 files. Press any key to obtain percentage\",\r\n\t\t\tretrieving:\"Retrieving data \",\r\n\t\t\tnodown:\"No downloads are available. So sorry! Check back soon\",\r\n\t\t\tmDownloadList: 'List all new available packs (%1)',\r\n\t\t\t\"mBack\":\"go back\",\r\n\t\t\tmDownloadInstructions: 'Press arrow keys to browse packs, the space bar to select a pack, p to preview its sound, and enter to begin downloading selected packs. Press escape or the left arrow to cancel',\r\n\t\t\tmListen:\"Ready: %1 levels unlocked. you can go back to the main menu with the left arrow key.\",\r\n\t\t\tmStart: 'Start Game',\r\n\t\t\tmLearn: 'Learn the pack',\r\n\t\t\tmActions: 'This pack has %1 actions. Typical keys are space, tab, enter, backspace, and optionally arrows up, down, left, right. If you have mapped your keyboard differently, use your custom keys instead. To hear the stop action, press the period key (to the right of comma). To exit press Q',\r\n\t\t\t\"yes\":\"Yes\",\r\n\t\t\t\"no\":\"no\",\r\n\t\t\t\r\n\t\t\tdling: 'Downloading %2 packs please wait...',\r\n\t\t\tdlprog:\"downloading pack %1 of %2...\",\r\n\t\t\tdlingdone: 'Done! Rebuilding database...',\r\n\t\t\tkeymapChoose: 'Press the key to replace this action: You can\\'t use q, p, escape, enter or space.',\r\n\t\t\tpackError: 'No packs were found on your computer. I will now proceed to download the default pack, please wait...',\r\n\t\t\tintro: 'Welcome to beatstar!\\nThis is a world of music, fun and games.\\nPlease read the online instructions to learn how to play.\\n',\r\n\t\t\tkeymapStart: 'We will now remap your keyboard. You will hear the sounds for the different actions, and you will be prompted to press the key you want to associate to the new actions.',\r\n\t\t\ttamperWarning: 'This pack has been tampered with and is no longer unlocked. Press enter to continue.',\r\n\t\t\tmNew: 'Get new packs',\r\n\t\t\tnopacks: 'No packs are available. If you think this is a bug, please contact me.',\r\n\t\t\tmBrowse: 'buy new packs (current beatcoins %1)',\r\n\t\t\t\t\t\tmBrowseIncompleted: 'Browse uncompleted packs',\r\n\t\t\tmBrowseUnlocked:\"Change to different unlocked pack\",\r\n\t\t\t\"youwin\":\"You win %1 coins!\",\r\n\t\t\t\t\t\t\"youlose\":\"You lose %1 coins.\",\r\n\t\t\t\r\n\t\t\tmHashes: 'Rebuild packs folder',\r\n\t\t\tmDownload: 'Download new packs'\r\n\t\t};\r\n\t\tthis.strings[2] = {\r\n\t\t\t\"mFound\":\"Hemos encontrado %1 packs nuevos: ¿Qué quieres hacer?\",\r\n\t\t\tmReady: 'Espera, por favor...',\r\n\t\t\tmDownloadAll: 'Descargar todos los packs no instalados (tamaño: %1 %2)',\r\n\t\t\tnodown:\"No hay descargas disponibles por el momento. prueba pronto!\",\r\n\t\t\tmDownloadList: 'Lista todos los packs no instalados (%1 en total)',\r\n\t\t\t\"mBack\":\"volver\",\r\n\t\t\tmDownloadInstructions: 'Pulsa las flechas para moverte por los packs, barra espaciadora para seleccionar un pack, la p para previsualizarlo, y enter para empezar la descarga de los seleccionados. pulsa escape o la flecha izquierda para cancelar',\r\n\t\t\tmStart: 'jugar',\r\n\t\t\tmLearn: 'aprender el pack',\r\n\t\t\tmActions: 'Este pack tiene %1 acciones. Las teclas normales son espacio, tabulador, enter, retroceso/borrar, y opcionalmente las flechas. Si has cambiado la distribución del teclado puedes usarla. Para escuchar la acción de quedarse quieto, pulsa la tecla del punto. Para salir pulsa la q.',\r\n\t\t\tdling: 'Descargando %2 packs por favor espera...',\r\n\t\t\tdlingdone: '¡Hecho! Reconstruyendo base de datos...',\r\n\t\t\tkeymapChoose: 'Pulsa la tecla que quieras que reemplace a No puedes usar la q, escape, enter o espacio.',\r\n\t\t\tpackError: 'No hemos encontrado packs en tu pc, vamos a bajar el pack por defecto, espera por favor...',\r\n\t\t\tintro: 'Bienvenido a beat star!\\nEste es un mundo de música y diversión!\\nPor favor, lee el manual en internet para aprender a jugar.\\n',\r\n\t\t\tkeymapStart: 'Vamos a cambiar la distribución del teclado. Vas a escuchar los sonidos de las acciones y vas a tener que pulsar la tecla que quieres que corresponda para la acción.',\r\n\t\t\tdlprog:\"descargando pack %1 de %2...\",\r\n\t\t\ttamperWarning: 'Este pack ha sido modificado y ya no está desbloqueado. Pulsa enter para continuar.',\r\n\t\t\tmUnlocked:\"Escuchar la música desbloqueada de este pack (%1 niveles)\",\r\n\t\t\tmBrowseIncompleted: 'Ver packs comprados no completados',\r\n\t\t\t\"yes\":\"sí\",\r\n\t\t\t\"youwin\":\"Ganas %1 monedas!\",\r\n\t\t\t\t\t\t\"youlose\":\"Pierdes %1 monedas!\",\r\n\t\t\t\"no\":\"no\",\r\n\t\t\tmNew: 'Conseguir nuevos packs',\r\n\t\t\tnopacks: 'No hay packs disponibles. Si crees que hay un error en el juego, ponte en contacto conmigo.',\r\n\t\t\tmBrowse: 'comprar un pack (tienes %1 monedas)',\r\n\t\t\tmBrowseUnlocked: 'Cambiar a otro pack comprado',\r\n\t\t\tmHashes: 'Reconstruir base de datos de packs',\r\n\t\t\tmainmenu:\"menú principal\",\r\n\t\t\tmSelect:\"Por favor selecciona\",\r\n\t\t\tmListen:\"listo: %1 niveles desbloqueados, flecha izquierda vuelve al menú principal\",\r\n\t\t\tdfiles:\"Descargando %1 archivos. Pulsa cualquier tecla para obtener porcentaje\",\r\n\t\t\tretrieving:\"Recopilando datos \",\r\n\t\t\tmDownload: 'Descargar packs'\r\n\t\t};\r\n\t\r\n\t}\r\n\r\n\tget(what, rep = []) {\r\n\t\tlet str;\r\n\t\tif (typeof this.strings[lang][what] !== 'undefined') {\r\n\t\t\tstr = this.strings[lang][what];\r\n\t\t} else if (typeof this.strings[1][what] !== 'undefined') {\r\n\t\t\tstr = this.strings[1][what];\r\n\t\t} else {\r\n\t\t\treturn 'String error: '+what;\r\n\t\t}\r\n\trep.forEach((v, i) => {\r\n\t\tconst i1 = Number(i) + 1;\r\n\t\tstr = str.replace('%' + i1, v);\r\n\t});\r\n\treturn str;\r\n\t}\r\n}\r\nexport var strings = new Strings();\r\n","import $ from 'jquery';\r\nimport {speech} from './tts';\r\n\r\n'use strict';\r\nclass KeyboardInput {\r\n\tconstructor() {\r\n\t\tthis.keyDown = [];\r\n\t\tthis.justPressed = [];\r\n\t\tthis.chars = [];\r\n\t\tthis.justReleased = [];\r\n\t\tthis.justPressedEventCallback = null;\r\n\t\tthis.charEventCallback=null;\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst that = this;\r\n\t\t// \t\t$(document).keydown(function(event) { that.handleKeyDown(event); });\r\n\t\t// \t\t$(document).keyup(function(event) { that.handleKeyUp(event); });\r\n\t\tdocument.addEventListener('keydown', event => {\r\n that.handleKeyDown(event);\r\n\t\t});\r\n\t\tdocument.addEventListener('keyup', event => {\r\n that.handleKeyUp(event);\r\n\t\t});\r\n\t\t\t\tdocument.addEventListener('keypress', event => {\r\n that.handleChar(event);\r\n\t\t\t\t});\r\n\t}\r\n\r\n\thandleKeyDown(event) {\r\n\t\tif (this.keyDown[event.which] != true || typeof this.keyDown[event.which] === 'undefined') {\r\n\t\t\tthis.keyDown[event.which] = true;\r\n\t\t\tthis.justPressed[event.which] = true;\r\n\t\t\tthis.justReleased[event.which] = false;\r\n\t\t\tif (typeof this.justPressedEventCallback !== 'undefined' && this.justPressedEventCallback != null) {\r\nthis.justPressedEventCallback(event.which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleChar(char) {\r\n\tif (char.which<48 || char.which > 122) {\r\n\treturn; \r\n\t}\r\n\t\tif (String.fromCharCode(char.which) != '') {\r\n\t\t\tthis.chars += String.fromCharCode(char.which);\r\n\t\t\tif (typeof this.charEventCallback !== 'undefined' && this.charEventCallback != null) {\r\nthis.charEventCallback(String.fromCharCode(char.which));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyUp(event) {\r\n\t\tif (this.keyDown[event.which] == true) {\r\n\t\t\tthis.keyDown[event.which] = false;\r\n\t\t\tthis.justPressed[event.which] = false;\r\n\t\t\tthis.justReleased[event.which] = true;\r\n\t\t}\r\n\t\tthis.chars = '';\r\n\t}\r\n\r\n\tisDown(event) {\r\n\t\treturn this.keyDown[event];\r\n\t}\r\n\r\n\tisJustPressed(event) {\r\n\t\tif (this.justPressed[event] == true) {\r\n\t\t\tthis.justPressed[event] = false;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tisJustReleased(event) {\r\n\t\tif (this.justReleased[event]) {\r\n\t\t\tthis.justReleased[event] = false;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tkeysDown() {\r\n\t\tconst kd = [];\r\n\tthis.keyDown.forEach((v, i) => {\r\n\t\tif (v) {\r\n\tkd.push(i);\r\n\t\t}\r\n\t});\r\n\treturn kd;\r\n\t}\r\n\r\n\tgetChars() {\r\n\t\tconst kd = this.chars;\r\n\t\tthis.chars = '';\r\n\t\treturn kd;\r\n\t}\r\n\r\n\tkeysPressed() {\r\n\t\tconst kd = [];\r\n\tthis.justPressed.forEach((v, i) => {\r\n\t\tif (v) {\r\n\tkd.push(i);\r\n\t\t}\r\n\t});\r\n\tthis.justPressed.splice();\r\n\treturn kd;\r\n\t}\r\n\r\n\treleaseAllKeys() {\r\n\r\n\t}\r\n\r\n\tkeysReleased() {\r\n\t\tconst kd = [];\r\n\tthis.justReleased.forEach((v, i) => {\r\n\t\tif (v) {\r\n\tkd.push(i);\r\n\t\t}\r\n\t});\r\n\tthis.justReleased.splice();\r\n\treturn kd;\r\n\t}\r\n}\r\n\r\nexport {KeyboardInput};\r\n","'use strict';\r\nimport {utils} from './utilities';\r\nimport {strings} from './strings';\r\nimport {speech, TTS, useWebTTS} from './tts';\r\nimport $ from 'jquery';\r\nimport {so} from './soundObject.js';\r\nimport {MenuTypes, MenuItem} from './menuItem';\r\nimport {KeyEvent} from './keycodes';\r\nimport {KeyboardInput} from './input';\r\n\r\nclass Menu {\r\n\tconstructor(name, menuData, music) {\r\n\t\tthis.menuData = menuData;\r\n\t\tthis.cursor = 0;\r\n\t\tthis.name = name;\r\n\t\tthis.sndKeyChar = so.create('ui/keyChar');\r\n\t\tthis.sndKeyDelete = so.create('ui/keyDelete');\r\n\t\tthis.sndSliderLeft = so.create('ui/menuSliderLeft');\r\n\t\tthis.sndSliderRight = so.create('ui/menuSliderRight');\r\n\t\tthis.sndBoundary = so.create('ui/menuBoundary');\r\n\t\tthis.sndChoose = so.create('ui/menuChoose');\r\n\t\tthis.sndMove = so.create('ui/menuMove');\r\n\t\tthis.sndOpen = so.create('ui/menuOpen');\r\n\t\tthis.sndSelector = so.create('ui/menuSelector');\r\n\t\tthis.sndWrap = so.create('ui/menuWrap');\r\n\t\tthis.selectCallback = null;\r\n\t\tif (typeof music !== 'undefined') {\r\n\t\t\tthis.music = music;\r\n\t\t}\r\n\t\tconst id = document.getElementById('touchArea');\r\n\t\t// This.hammer = new Hammer(id);\r\n\t}\r\n\r\n\tnextItem() {\r\n\t\tif (this.cursor < this.menuData.length - 1) {\r\n\t\t\tthis.cursor++;\r\n\t\t}\r\n\t\tthis.sndMove.play();\r\n\r\n\t\tthis.menuData[this.cursor].speak();\r\n\t}\r\n\r\n\tpreviousItem() {\r\n\t\tif (this.cursor > 0) {\r\n\t\t\tthis.cursor--;\r\n\t\t}\r\n\t\tthis.sndMove.play();\r\n\t\tthis.menuData[this.cursor].speak();\r\n\t}\r\n\r\n\tincrease() {\r\n\t\tif (this.menuData[this.cursor].type == MenuTypes.SLIDER || this.menuData[this.cursor].type == MenuTypes.SELECTOR) {\r\n\t\t\tthis.menuData[this.cursor].increase();\r\n\t\t\tif (this.menuData[this.cursor].type == MenuTypes.SLIDER) {\r\n\t\t\t\tthis.sndSliderRight.play();\r\n\t\t\t} else {\r\n\t\t\t\tthis.sndSelector.play();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdecrease() {\r\n\t\tif (this.menuData[this.cursor].type == MenuTypes.SLIDER || this.menuData[this.cursor].type == MenuTypes.SELECTOR) {\r\n\t\t\tthis.menuData[this.cursor].decrease();\r\n\t\t\tif (this.menuData[this.cursor].type == MenuTypes.SLIDER) {\r\n\t\t\t\tthis.sndSliderLeft.play();\r\n\t\t\t} else {\r\n\t\t\t\tthis.sndSelector.play();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinsertCharacter(char) {\r\n\t\tif (this.menuData[this.cursor].type == MenuTypes.EDIT) {\r\n\t\t\tthis.menuData[this.cursor].addChar(String.fromCharCode(char));\r\n\t\t\tthis.sndKeyChar.play();\r\n\t\t}\r\n\t}\r\n\r\n\tremoveCharacter() {\r\n\t\tif (this.menuData[this.cursor].type == MenuTypes.EDIT) {\r\n\t\t\tthis.menuData[this.cursor].removeChar();\r\n\t\t\tthis.sndKeyDelete.play();\r\n\t\t}\r\n\t}\r\n\r\n\thandleInput(event) {\r\n\t\t\tthis.insertCharacter(event.which);\r\n\t}\r\n\r\n\tdestroySounds() {\r\n\t\tthis.sndKeyChar.unload();\r\n\t\tthis.sndKeyDelete.unload();\r\n\t\tthis.sndSliderLeft.unload();\r\n\t\tthis.sndSliderRight.unload();\r\n\t\tthis.sndBoundary.unload();\r\n\t\tthis.sndChoose.unload();\r\n\t\tthis.sndMove.unload();\r\n\t\tthis.sndOpen.unload();\r\n\t\tthis.sndSelector.unload();\r\n\t\tthis.sndWrap.unload();\r\n\t\tif (typeof this.music !== 'undefined') {\r\nthis.music.unload();\r\n\t\t}\r\n\t}\r\n\r\n\tasync fade() {\r\n\t\tfor (let i = this.music.volume; i > 0; i -= 0.06) {\r\n\t\t\tthis.music.volume = i;\r\n\t\t\tawait utils.sleep(50);\r\n\t\t}\r\n\t\tthis.music.unload();\r\n\t\tthis.destroy();\r\n\t}\r\n\r\ndestroy() {\r\n\t\t\t$(document).off('keydown');\r\n\t\t$(document).off('keypress');\r\n\t\t// This.hammer.destroy();\r\n\t\tconst that = this;\r\n\t\tsetTimeout(() => {\r\n that.destroySounds();\r\n\t\t}, 500);\r\n\t}\r\n\r\n\thandleKeys(event) {\r\n\t\tswitch (event.which) {\r\n\t\t\tcase KeyEvent.DOM_VK_RETURN:\r\n\t\t\t\t\tthis.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_PAGE_UP:\r\n\t\t\t\tthis.music.volume += 0.03;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_PAGE_DOWN:\r\n\t\t\t\tthis.music.volume -= 0.03;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_BACK_SPACE:\r\n\t\t\t\t\tthis.removeCharacter();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase KeyEvent.DOM_VK_DOWN:\r\n\r\n\t\t\t\t\tthis.nextItem();\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_UP:\r\n\t\t\t\t\tthis.previousItem();\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_RIGHT:\r\n\r\n\t\t\t\t\t\tthis.increase();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase KeyEvent.DOM_VK_LEFT:\r\n\r\n\t\t\t\t\t\tthis.decrease();\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trun(callback) {\r\n\t\tif (typeof this.music === 'object') {\r\n\t\t\tthis.music.volume = 0.5;\r\n\t\t\tthis.music.loop = true;\r\n\tthis.music.play();\r\n\t\t} else if (typeof this.music === 'string') {\r\n\t\t\tthis.music = so.create(this.music);\r\n\t\t\tthis.music.volume = 0.5;\r\n\t\t\tthis.music.loop = true;\r\n\tthis.music.play();\r\n\t\t} else {\r\n\t\t}\r\n\t\tthis.selectCallback = callback;\r\n\t\tconst that = this;\r\n\t\t$(document).on('keypress', event => {\r\n that.handleInput(event);\r\n\t\t});\r\n\t\t$(document).on('keydown', event => {\r\n that.handleKeys(event);\r\n\t\t});\r\n\t\t/*\r\n\t\tThis.hammer.on(\"swipeleft\", function(event) { that.handleSwipe(0); });\r\n\t\tthis.hammer.on(\"swiperight\", function(event) { that.handleSwipe(1); });\r\n\t\tthis.hammer.on(\"panup\", function(event) { that.handleSwipe(3); });\r\n\t\tthis.hammer.on(\"pandown\", function(event) { that.handleSwipe(4); });\r\n\t\tthis.hammer.on(\"tap\", function(event) { that.handleSwipe(2); });\r\n\t\t*/\r\n\t\tspeech.speak(this.name);\r\n\t\tthis.sndOpen.play();\r\n\t}\r\n\r\n\thandleSwipe(action) {\r\n\t\tif (action == 3) {\r\n\t\t\tthis.decrease();\r\n\t\t}\r\n\t\tif (action == 4) {\r\n\t\t\tthis.increase();\r\n\t\t}\r\n\r\n\t\tif (action == 0) {\r\n\t\t\tthis.previousItem();\r\n\t\t}\r\n\t\tif (action == 1) {\r\n\t\t\tthis.nextItem();\r\n\t\t}\r\n\t\tif (action == 2) {\r\n\t\t\tthis.select();\r\n\t\t}\r\n\t}\r\n\r\n\tselect() {\r\n\t\tconst selected = this.menuData[this.cursor].id;\r\n\r\n\t\tconst items = [];\r\n\t\tfor (let i = 0; i < this.menuData.length; i++) {\r\n\t\t\tlet addItem = null;\r\n\t\t\tif (this.menuData[i].type == MenuTypes.SLIDER) {\r\n\t\t\t\taddItem = {\r\n\t\t\t\t\tid: this.menuData[i].id,\r\n\t\t\t\t\tvalue: this.menuData[i].currentValue,\r\n\t\t\t\t\tname: this.menuData[i].options[this.menuData[i].currentValue]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (this.menuData[i].type == MenuTypes.EDIT) {\r\n\t\t\t\taddItem = {\r\n\t\t\t\t\tid: this.menuData[i].id,\r\n\t\t\t\t\tvalue: this.menuData[i].text\r\n\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (this.menuData[i].type == MenuTypes.SELECTOR) {\r\n\t\t\t\taddItem = {\r\n\t\t\t\t\tid: this.menuData[i].id,\r\n\t\t\t\t\tvalue: this.menuData[i].currentOption,\r\n\t\t\t\t\tname: this.menuData[i].options[this.menuData[i].currentOption]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\titems.push(addItem);\r\n\t\t}\r\n\r\n\t\tconst toReturn = {\r\n\t\t\tselected,\r\n\t\t\tcursor: this.cursor,\r\n\t\t\titems\r\n\t\t};\r\n\t\tthis.sndChoose.play();\r\n\t\t$(document).off('keydown');\r\n\t\t$(document).off('keypress');\r\n\t\tif (typeof this.music !== 'undefined') {\r\nthis.fade();\r\n\t\t}\r\n\t\tconst that = this;\r\n\t\t\t\tsetTimeout(() => {\r\nthat.selectCallback(toReturn);\r\n\t\t\t\t}, 700);\r\n\t}\r\n}\r\nexport {Menu};\r\n","'use strict';\r\nclass OldTimer {\r\n\tconstructor() {\r\n\t\tthis.elapsed;\r\n\t\tthis.paused = true;\r\n\t\tthis.lastTime = 0;\r\n\t\tthis.pauseWhen = 0;\r\n\t\tthis.started = true;\r\n\t}\r\n\r\n\tisActive() {\r\n\t\treturn !paused & started;\r\n\t}\r\n\r\n\tget elapsed() {\r\n\t\tif (this.paused) {\r\n\t\t\treturn this.pauseWhen - this.lastTime;\r\n\t\t}\r\n\t\treturn performance.now() - this.lastTime;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tthis.pauseWhen = performance.now();\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.lastTime = performance.now();\r\n\t\tthis.pauseWhen = 0;\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t}\r\n\r\n\tresume() {\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t\tthis.lastTime += performance.now() - this.pauseWhen;\r\n\t}\r\n}\r\nexport {OldTimer};\r\n","/*!\r\n *  howler.js v2.0.9\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2018, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function () {\r\n\t'use strict';\r\n\r\n\t/** Global Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n\tconst HowlerGlobal = function () {\r\n    this.init();\r\n\t};\r\n\tHowlerGlobal.prototype = {\r\n\t\t/**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n\t\tinit() {\r\n\t\t\tconst self = this || Howler;\r\n\r\n\t\t\t// Create a global ID counter.\r\n\t\t\tself._counter = 1000;\r\n\r\n\t\t\t// Internal properties.\r\n\t\t\tself._codecs = {};\r\n\t\t\tself._howls = [];\r\n\t\t\tself._muted = false;\r\n\t\t\tself._volume = 1;\r\n\t\t\tself._canPlayEvent = 'canplaythrough';\r\n\t\t\tself._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n\t\t\t// Public properties.\r\n\t\t\tself.masterGain = null;\r\n\t\t\tself.noAudio = false;\r\n\t\t\tself.usingWebAudio = true;\r\n\t\t\tself.autoSuspend = true;\r\n\t\t\tself.ctx = null;\r\n\r\n\t\t\t// Set to false to disable the auto iOS enabler.\r\n\t\t\tself.mobileAutoEnable = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n\t\tvolume(vol) {\r\n\t\t\tconst self = this || Howler;\r\n\t\t\tvol = parseFloat(vol);\r\n\r\n\t\t\t// If we don't have an AudioContext created yet, run the setup.\r\n\t\t\tif (!self.ctx) {\r\n        setupAudioContext();\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n\t\t\t\tself._volume = vol;\r\n\r\n\t\t\t\t// Don't update any of the nodes if we are muted.\r\n\t\t\t\tif (self._muted) {\r\n\t\t\t\t\treturn self;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When using Web Audio, we just need to adjust the master gain.\r\n\t\t\t\tif (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loop through and change volume for all HTML5 audio nodes.\r\n\t\t\t\tfor (let i = 0; i < self._howls.length; i++) {\r\n\t\t\t\t\tif (!self._howls[i]._webAudio) {\r\n\t\t\t\t\t\t// Get all of the sounds in this Howl group.\r\n\t\t\t\t\t\tconst ids = self._howls[i]._getSoundIds();\r\n\r\n\t\t\t\t\t\t// Loop through all sounds and change the volumes.\r\n\t\t\t\t\t\tfor (let j = 0; j < ids.length; j++) {\r\n\t\t\t\t\t\t\tconst sound = self._howls[i]._soundById(ids[j]);\r\n\r\n\t\t\t\t\t\t\tif (sound && sound._node) {\r\n\t\t\t\t\t\t\t\tsound._node.volume = sound._volume * vol;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\treturn self._volume;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n\t\tmute(muted) {\r\n\t\t\tconst self = this || Howler;\r\n\r\n\t\t\t// If we don't have an AudioContext created yet, run the setup.\r\n\t\t\tif (!self.ctx) {\r\n        setupAudioContext();\r\n\t\t\t}\r\n\r\n\t\t\tself._muted = muted;\r\n\r\n\t\t\t// With Web Audio, we just need to mute the master gain.\r\n\t\t\tif (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n\t\t\t}\r\n\r\n\t\t\t// Loop through and mute all HTML5 Audio nodes.\r\n\t\t\tfor (let i = 0; i < self._howls.length; i++) {\r\n\t\t\t\tif (!self._howls[i]._webAudio) {\r\n\t\t\t\t\t// Get all of the sounds in this Howl group.\r\n\t\t\t\t\tconst ids = self._howls[i]._getSoundIds();\r\n\r\n\t\t\t\t\t// Loop through all sounds and mark the audio node as muted.\r\n\t\t\t\t\tfor (let j = 0; j < ids.length; j++) {\r\n\t\t\t\t\t\tconst sound = self._howls[i]._soundById(ids[j]);\r\n\r\n\t\t\t\t\t\tif (sound && sound._node) {\r\n\t\t\t\t\t\t\tsound._node.muted = (muted) ? true : sound._muted;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n\t\tunload() {\r\n\t\t\tconst self = this || Howler;\r\n\r\n\t\t\tfor (let i = self._howls.length - 1; i >= 0; i--) {\r\n        self._howls[i].unload();\r\n\t\t\t}\r\n\r\n\t\t\t// Create a new AudioContext to make sure it is fully reset.\r\n\t\t\tif (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n\t\tcodecs(ext) {\r\n\t\t\treturn (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n\t\t_setup() {\r\n\t\t\tconst self = this || Howler;\r\n\r\n\t\t\t// Keeps track of the suspend/resume state of the AudioContext.\r\n\t\t\tself.state = self.ctx ? self.ctx.state || 'running' : 'running';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n      \t// No audio is available on this system if noAudio is set to true.\r\n      \tif (typeof Audio !== 'undefined') {\r\n      \t\ttry {\r\n      \t\t\tvar test = new Audio();\r\n\r\n      \t\t\t// Check if the canplaythrough event is available.\r\n      \t\t\tif (typeof test.oncanplaythrough === 'undefined') {\r\n      \t\t\t\tself._canPlayEvent = 'canplay';\r\n      \t\t\t}\r\n      \t\t} catch (e) {\r\n      \t\t\tself.noAudio = true;\r\n      \t\t}\r\n      \t} else {\r\n      \t\tself.noAudio = true;\r\n      \t}\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n      \tvar test = new Audio();\r\n      \tif (test.muted) {\r\n      \t\tself.noAudio = true;\r\n      \t}\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n\t\t_setupCodecs() {\r\n\t\t\tconst self = this || Howler;\r\n\t\t\tlet audioTest = null;\r\n\r\n\t\t\t// Must wrap in a try/catch because IE11 in server mode throws an error.\r\n\t\t\ttry {\r\n\t\t\t\taudioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n\t\t\t} catch (err) {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tif (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tconst mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n\t\t\t// Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n\t\t\tconst checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n\t\t\tconst isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n\t\t\tself._codecs = {\r\n\t\t\t\tmp3: Boolean(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n\t\t\t\tmpeg: Boolean(mpegTest),\r\n\t\t\t\topus: Boolean(audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, '')),\r\n\t\t\t\togg: Boolean(audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '')),\r\n\t\t\t\toga: Boolean(audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '')),\r\n\t\t\t\twav: Boolean(audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, '')),\r\n\t\t\t\taac: Boolean(audioTest.canPlayType('audio/aac;').replace(/^no$/, '')),\r\n\t\t\t\tcaf: Boolean(audioTest.canPlayType('audio/x-caf;').replace(/^no$/, '')),\r\n\t\t\t\tm4a: Boolean((audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, '')),\r\n\t\t\t\tmp4: Boolean((audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, '')),\r\n\t\t\t\tweba: Boolean(audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\r\n\t\t\t\twebm: Boolean(audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\r\n\t\t\t\tdolby: Boolean(audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, '')),\r\n\t\t\t\tflac: Boolean((audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, ''))\r\n\t\t\t};\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Mobile browsers will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n\t\t_enableMobileAudio() {\r\n\t\t\tconst self = this || Howler;\r\n\r\n\t\t\t// Only run this on mobile devices if audio isn't already eanbled.\r\n\t\t\tconst isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\r\n\t\t\tconst isTouch = Boolean(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\r\n\t\t\tif (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tself._mobileEnabled = false;\r\n\r\n\t\t\t// Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n\t\t\t// Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n\t\t\t// By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n\t\t\tif (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n\t\t\t\tself._mobileUnloaded = true;\r\n        self.unload();\r\n\t\t\t}\r\n\r\n\t\t\t// Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n\t\t\t// http://stackoverflow.com/questions/24119684\r\n\t\t\tself._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n\t\t\t// Call this method on touch start to create and play a buffer,\r\n\t\t\t// then check if the audio actually played to determine if\r\n\t\t\t// audio has now been unlocked on iOS, Android, etc.\r\n\t\t\tvar unlock = function () {\r\n        // Fix Android can not play in suspend state.\r\n        Howler._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        const source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.addEventListener('ended', () => {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._mobileEnabled = true;\r\n          self.mobileAutoEnable = false;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n        });\r\n\t\t\t};\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n\t\t_autoSuspend() {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\tif (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if any sounds are playing.\r\n\t\t\tfor (let i = 0; i < self._howls.length; i++) {\r\n\t\t\t\tif (self._howls[i]._webAudio) {\r\n\t\t\t\t\tfor (let j = 0; j < self._howls[i]._sounds.length; j++) {\r\n\t\t\t\t\t\tif (!self._howls[i]._sounds[j]._paused) {\r\n\t\t\t\t\t\t\treturn self;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n\t\t\t}\r\n\r\n\t\t\t// If no sound has played after 30 seconds, suspend the context.\r\n\t\t\tself._suspendTimer = setTimeout(() => {\r\n\t\t\t\tif (!self.autoSuspend) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself._suspendTimer = null;\r\n\t\t\t\tself.state = 'suspending';\r\n        self.ctx.suspend().then(() => {\r\n        \tself.state = 'suspended';\r\n\r\n        \tif (self._resumeAfterSuspend) {\r\n        \t\tdelete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n        \t}\r\n        });\r\n\t\t\t}, 30000);\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n\t\t_autoResume() {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\tif (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n\t\t\t} else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(() => {\r\n        \tself.state = 'running';\r\n\r\n        \t// Emit to all Howls that the audio has resumed.\r\n        \tfor (let i = 0; i < self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n        \t}\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n\t\t\t} else if (self.state === 'suspending') {\r\n\t\t\t\tself._resumeAfterSuspend = true;\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t}\r\n\t};\r\n\r\n\t// Setup the global audio controller.\r\n\tvar Howler = new HowlerGlobal();\r\n\r\n\t/** Group Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n\tconst Howl = function (o) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Throw an error if no source is provided.\r\n\t\tif (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n\t\t}\r\n\r\n    self.init(o);\r\n\t};\r\n\tHowl.prototype = {\r\n\t\t/**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n\t\tinit(o) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// If we don't have an AudioContext created yet, run the setup.\r\n\t\t\tif (!Howler.ctx) {\r\n        setupAudioContext();\r\n\t\t\t}\r\n\r\n\t\t\t// Setup user-defined default properties.\r\n\t\t\tself._autoplay = o.autoplay || false;\r\n\t\t\tself._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n\t\t\tself._html5 = o.html5 || false;\r\n\t\t\tself._muted = o.mute || false;\r\n\t\t\tself._loop = o.loop || false;\r\n\t\t\tself._pool = o.pool || 5;\r\n\t\t\tself._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n\t\t\tself._rate = o.rate || 1;\r\n\t\t\tself._sprite = o.sprite || {};\r\n\t\t\tself._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n\t\t\tself._volume = o.volume !== undefined ? o.volume : 1;\r\n\t\t\tself._xhrWithCredentials = o.xhrWithCredentials || false;\r\n\r\n\t\t\t// Setup all other default properties.\r\n\t\t\tself._duration = 0;\r\n\t\t\tself._state = 'unloaded';\r\n\t\t\tself._sounds = [];\r\n\t\t\tself._endTimers = {};\r\n\t\t\tself._queue = [];\r\n\t\t\tself._playLock = false;\r\n\r\n\t\t\t// Setup event listeners.\r\n\t\t\tself._onend = o.onend ? [{fn: o.onend}] : [];\r\n\t\t\tself._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n\t\t\tself._onload = o.onload ? [{fn: o.onload}] : [];\r\n\t\t\tself._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n\t\t\tself._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n\t\t\tself._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n\t\t\tself._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n\t\t\tself._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n\t\t\tself._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n\t\t\tself._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n\t\t\tself._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n\t\t\tself._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n\t\t\tself._onresume = [];\r\n\r\n\t\t\t// Web Audio or HTML5 Audio?\r\n\t\t\tself._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n\t\t\t// Automatically try to enable audio on iOS.\r\n\t\t\tif (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\r\n        Howler._enableMobileAudio();\r\n\t\t\t}\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n        \tevent: 'play',\r\n        \taction() {\r\n            self.play();\r\n        \t}\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n\t\tload() {\r\n\t\t\tconst self = this;\r\n\t\t\tlet url = null;\r\n\r\n\t\t\t// If no audio is available, quit immediately.\r\n\t\t\tif (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure our source is in an array.\r\n\t\t\tif (typeof self._src === 'string') {\r\n\t\t\t\tself._src = [self._src];\r\n\t\t\t}\r\n\r\n\t\t\t// Loop through the sources and pick the first one that is compatible.\r\n\t\t\tfor (let i = 0; i < self._src.length; i++) {\r\n\t\t\t\tvar ext, str;\r\n\r\n\t\t\t\tif (self._format && self._format[i]) {\r\n\t\t\t\t\t// If an extension was specified, use that instead.\r\n\t\t\t\t\text = self._format[i];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Make sure the source is a string.\r\n\t\t\t\t\tstr = self._src[i];\r\n\t\t\t\t\tif (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Extract the file extension from the URL or base64 data URI.\r\n\t\t\t\t\text = /^data:audio\\/([^;,]+);/i.exec(str);\r\n\t\t\t\t\tif (!ext) {\r\n\t\t\t\t\t\text = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ext) {\r\n\t\t\t\t\t\text = ext[1].toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Log a warning if no extension was found.\r\n\t\t\t\tif (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if this extension is available.\r\n\t\t\t\tif (ext && Howler.codecs(ext)) {\r\n\t\t\t\t\turl = self._src[i];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n\t\t\t}\r\n\r\n\t\t\tself._src = url;\r\n\t\t\tself._state = 'loading';\r\n\r\n\t\t\t// If the hosting page is HTTPS and the source isn't,\r\n\t\t\t// drop down to HTML5 Audio to avoid Mixed Content errors.\r\n\t\t\tif (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n\t\t\t\tself._html5 = true;\r\n\t\t\t\tself._webAudio = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Create a new sound object and add it to the pool.\r\n\t\t\tnew Sound(self);\r\n\r\n\t\t\t// Load and decode the audio data for playback.\r\n\t\t\tif (self._webAudio) {\r\n        loadBuffer(self);\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n\t\tplay(sprite, internal) {\r\n\t\t\tconst self = this;\r\n\t\t\tlet id = null;\r\n\r\n\t\t\t// Determine if a sprite, sound id or nothing was passed\r\n\t\t\tif (typeof sprite === 'number') {\r\n\t\t\t\tid = sprite;\r\n\t\t\t\tsprite = null;\r\n\t\t\t} else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n\t\t\t\t// If the passed sprite doesn't exist, do nothing.\r\n\t\t\t\treturn null;\r\n\t\t\t} else if (typeof sprite === 'undefined') {\r\n\t\t\t\t// Use the default sound sprite (plays the full audio length).\r\n\t\t\t\tsprite = '__default';\r\n\r\n\t\t\t\t// Check if there is a single paused sound that isn't ended.\r\n\t\t\t\t// If there is, play that sound. If not, continue as usual.\r\n\t\t\t\tlet num = 0;\r\n\t\t\t\tfor (let i = 0; i < self._sounds.length; i++) {\r\n\t\t\t\t\tif (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n\t\t\t\t\t\tnum++;\r\n\t\t\t\t\t\tid = self._sounds[i]._id;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (num === 1) {\r\n\t\t\t\t\tsprite = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tid = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Get the selected node, or get one from the pool.\r\n\t\t\tconst sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n\t\t\t// If the sound doesn't exist, do nothing.\r\n\t\t\tif (!sound) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Select the sprite definition.\r\n\t\t\tif (id && !sprite) {\r\n\t\t\t\tsprite = sound._sprite || '__default';\r\n\t\t\t}\r\n\r\n\t\t\t// If the sound hasn't loaded, we must wait to get the audio's duration.\r\n\t\t\t// We also need to wait to make sure we don't run into race conditions with\r\n\t\t\t// the order of function calls.\r\n\t\t\tif (self._state !== 'loaded') {\r\n\t\t\t\t// Set the sprite value on this sound.\r\n\t\t\t\tsound._sprite = sprite;\r\n\r\n\t\t\t\t// Makr this sounded as not ended in case another sound is played before this one loads.\r\n\t\t\t\tsound._ended = false;\r\n\r\n\t\t\t\t// Add the sound to the queue to be played on load.\r\n\t\t\t\tconst soundId = sound._id;\r\n        self._queue.push({\r\n        \tevent: 'play',\r\n        \taction() {\r\n            self.play(soundId);\r\n        \t}\r\n        });\r\n\r\n        return soundId;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't play the sound if an id was passed and it is already playing.\r\n\t\t\tif (id && !sound._paused) {\r\n\t\t\t\t// Trigger the play event, in order to keep iterating through queue.\r\n\t\t\t\tif (!internal) {\r\n          self._loadQueue('play');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sound._id;\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure the AudioContext isn't suspended, and resume it if it is.\r\n\t\t\tif (self._webAudio) {\r\n        Howler._autoResume();\r\n\t\t\t}\r\n\r\n\t\t\t// Determine how long to play for and where to start playing.\r\n\t\t\tconst seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n\t\t\tconst duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n\t\t\tconst timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n\t\t\t// Update the parameters of the sound\r\n\t\t\tsound._paused = false;\r\n\t\t\tsound._ended = false;\r\n\t\t\tsound._sprite = sprite;\r\n\t\t\tsound._seek = seek;\r\n\t\t\tsound._start = self._sprite[sprite][0] / 1000;\r\n\t\t\tsound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n\t\t\tsound._loop = Boolean(sound._loop || self._sprite[sprite][2]);\r\n\r\n\t\t\t// Begin the actual playback.\r\n\t\t\tconst node = sound._node;\r\n\t\t\tif (self._webAudio) {\r\n\t\t\t\t// Fire this when the sound is ready to play to begin Web Audio playback.\r\n\t\t\t\tconst playWebAudio = function () {\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          const vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n          \tsound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n          \tsound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n          \tself._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(() => {\r\n              self._emit('play', sound._id);\r\n            }, 0);\r\n          }\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (Howler.state === 'running') {\r\n          playWebAudio();\r\n\t\t\t\t} else {\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n\t\t\t\tconst playHtml5 = function () {\r\n\t\t\t\t\tnode.currentTime = seek;\r\n\t\t\t\t\tnode.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n\t\t\t\t\tnode.volume = sound._volume * Howler.volume();\r\n\t\t\t\t\tnode.playbackRate = sound._rate;\r\n\r\n\t\t\t\t\t// Mobile browsers will throw an error if this is called without user interaction.\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst play = node.play();\r\n\r\n\t\t\t\t\t\t// Support older browsers that don't support promises, and thus don't have this issue.\r\n\t\t\t\t\t\tif (typeof Promise !== 'undefined' && play instanceof Promise) {\r\n\t\t\t\t\t\t\t// Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n\t\t\t\t\t\t\tself._playLock = true;\r\n\r\n\t\t\t\t\t\t\t// Releases the lock and executes queued actions.\r\n\t\t\t\t\t\t\tconst runLoadQueue = function () {\r\n\t\t\t\t\t\t\t\tself._playLock = false;\r\n\t\t\t\t\t\t\t\tif (!internal) {\r\n                  self._emit('play', sound._id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n              play.then(runLoadQueue, runLoadQueue);\r\n\t\t\t\t\t\t} else if (!internal) {\r\n              self._emit('play', sound._id);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If the node is still paused, then we can assume there was a playback issue.\r\n\t\t\t\t\t\tif (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices where playback was not within a user interaction.');\r\n              return;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Setup the end timer on sprites or listen for the ended event.\r\n\t\t\t\t\t\tif (sprite !== '__default') {\r\n\t\t\t\t\t\t\tself._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself._endTimers[sound._id] = function () {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n\t\t\t\t\t\t\t};\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n\t\t\t\tconst loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n\t\t\t\tif (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar listener = function () {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n\t\t\t\t\t};\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn sound._id;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n\t\tpause(id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n\t\t\tif (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n        \tevent: 'pause',\r\n        \taction() {\r\n            self.pause(id);\r\n        \t}\r\n        });\r\n\r\n        return self;\r\n\t\t\t}\r\n\r\n\t\t\t// If no id is passed, get all ID's to be paused.\r\n\t\t\tconst ids = self._getSoundIds(id);\r\n\r\n\t\t\tfor (let i = 0; i < ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        const sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n        \t// Reset the seek position.\r\n        \tsound._seek = self.seek(ids[i]);\r\n        \tsound._rateSeek = 0;\r\n        \tsound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n          \tif (self._webAudio) {\r\n          \t\t// Make sure the sound has been created.\r\n          \t\tif (!sound._node.bufferSource) {\r\n          \t\t\tcontinue;\r\n          \t\t}\r\n\r\n          \t\tif (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n          \t\t} else {\r\n                sound._node.bufferSource.stop(0);\r\n          \t\t}\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n          \t} else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n          \t}\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n\t\tstop(id, internal) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n\t\t\tif (self._state !== 'loaded') {\r\n        self._queue.push({\r\n        \tevent: 'stop',\r\n        \taction() {\r\n            self.stop(id);\r\n        \t}\r\n        });\r\n\r\n        return self;\r\n\t\t\t}\r\n\r\n\t\t\t// If no id is passed, get all ID's to be stopped.\r\n\t\t\tconst ids = self._getSoundIds(id);\r\n\r\n\t\t\tfor (let i = 0; i < ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        const sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n        \t// Reset the seek position.\r\n        \tsound._seek = sound._start || 0;\r\n        \tsound._rateSeek = 0;\r\n        \tsound._paused = true;\r\n        \tsound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n          \tif (self._webAudio) {\r\n          \t\t// Make sure the sound's AudioBufferSourceNode has been created.\r\n          \t\tif (sound._node.bufferSource) {\r\n          \t\t\tif (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n          \t\t\t} else {\r\n                  sound._node.bufferSource.stop(0);\r\n          \t\t\t}\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n          \t\t}\r\n          \t} else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n          \t\tsound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n          \t}\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n\t\tmute(muted, id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n\t\t\tif (self._state !== 'loaded') {\r\n        self._queue.push({\r\n        \tevent: 'mute',\r\n        \taction() {\r\n            self.mute(muted, id);\r\n        \t}\r\n        });\r\n\r\n        return self;\r\n\t\t\t}\r\n\r\n\t\t\t// If applying mute/unmute to all sounds, update the group's value.\r\n\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\tif (typeof muted === 'boolean') {\r\n\t\t\t\t\tself._muted = muted;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn self._muted;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If no id is passed, get all ID's to be muted.\r\n\t\t\tconst ids = self._getSoundIds(id);\r\n\r\n\t\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\t\t// Get the sound.\r\n\t\t\t\tconst sound = self._soundById(ids[i]);\r\n\r\n\t\t\t\tif (sound) {\r\n\t\t\t\t\tsound._muted = muted;\r\n\r\n\t\t\t\t\t// Cancel active fade and set the volume to the end value.\r\n\t\t\t\t\tif (sound._interval) {\r\n            self._stopFade(sound._id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n\t\t\t\t\t} else if (sound._node) {\r\n\t\t\t\t\t\tsound._node.muted = Howler._muted ? true : muted;\r\n\t\t\t\t\t}\r\n\r\n          self._emit('mute', sound._id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n\t\tvolume() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst args = arguments;\r\n\t\t\tlet vol, id;\r\n\r\n\t\t\t// Determine the values based on arguments.\r\n\t\t\tif (args.length === 0) {\r\n\t\t\t\t// Return the value of the groups' volume.\r\n\t\t\t\treturn self._volume;\r\n\t\t\t} if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n\t\t\t\t// First check if this is an ID, and if not, assume it is a new volume.\r\n\t\t\t\tconst ids = self._getSoundIds();\r\n\t\t\t\tconst index = ids.indexOf(args[0]);\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tid = parseInt(args[0], 10);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvol = parseFloat(args[0]);\r\n\t\t\t\t}\r\n\t\t\t} else if (args.length >= 2) {\r\n\t\t\t\tvol = parseFloat(args[0]);\r\n\t\t\t\tid = parseInt(args[1], 10);\r\n\t\t\t}\r\n\r\n\t\t\t// Update the volume or return the current volume.\r\n\t\t\tlet sound;\r\n\t\t\tif (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n\t\t\t\t// If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n\t\t\t\tif (self._state !== 'loaded') {\r\n          self._queue.push({\r\n          \tevent: 'volume',\r\n          \taction() {\r\n              self.volume.apply(self, args);\r\n          \t}\r\n          });\r\n\r\n          return self;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set the group volume.\r\n\t\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\t\tself._volume = vol;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update one or all volumes.\r\n\t\t\t\tid = self._getSoundIds(id);\r\n\t\t\t\tfor (let i = 0; i < id.length; i++) {\r\n\t\t\t\t\t// Get the sound.\r\n\t\t\t\t\tsound = self._soundById(id[i]);\r\n\r\n\t\t\t\t\tif (sound) {\r\n\t\t\t\t\t\tsound._volume = vol;\r\n\r\n\t\t\t\t\t\t// Stop currently running fades.\r\n\t\t\t\t\t\tif (!args[2]) {\r\n              self._stopFade(id[i]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n\t\t\t\t\t\t} else if (sound._node && !sound._muted) {\r\n\t\t\t\t\t\t\tsound._node.volume = vol * Howler.volume();\r\n\t\t\t\t\t\t}\r\n\r\n            self._emit('volume', sound._id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsound = id ? self._soundById(id) : self._sounds[0];\r\n\t\t\t\treturn sound ? sound._volume : 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n\t\tfade(from, to, len, id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n\t\t\tif (self._state !== 'loaded') {\r\n        self._queue.push({\r\n        \tevent: 'fade',\r\n        \taction() {\r\n            self.fade(from, to, len, id);\r\n        \t}\r\n        });\r\n\r\n        return self;\r\n\t\t\t}\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      const ids = self._getSoundIds(id);\r\n      for (let i = 0; i < ids.length; i++) {\r\n      \t// Get the sound.\r\n      \tconst sound = self._soundById(ids[i]);\r\n\r\n      \t// Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n      \tif (sound) {\r\n      \t\t// Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n      \t\tif (!id) {\r\n            self._stopFade(ids[i]);\r\n      \t\t}\r\n\r\n      \t\t// If we are using Web Audio, let the native methods do the actual fade.\r\n      \t\tif (self._webAudio && !sound._muted) {\r\n      \t\t\tconst currentTime = Howler.ctx.currentTime;\r\n      \t\t\tconst end = currentTime + (len / 1000);\r\n      \t\t\tsound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n      \t\t}\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n      \t}\r\n      }\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n\t\t_startFadeInterval(sound, from, to, len, id, isGroup) {\r\n\t\t\tconst self = this;\r\n\t\t\tlet vol = from;\r\n\t\t\tconst diff = to - from;\r\n\t\t\tconst steps = Math.abs(diff / 0.01);\r\n\t\t\tconst stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n\t\t\tlet lastTick = Date.now();\r\n\r\n\t\t\t// Store the value being faded to.\r\n\t\t\tsound._fadeTo = to;\r\n\r\n\t\t\t// Update the volume value on each interval tick.\r\n\t\t\tsound._interval = setInterval(() => {\r\n\t\t\t\t// Update the volume based on the time since the last tick.\r\n\t\t\t\tconst tick = (Date.now() - lastTick) / len;\r\n\t\t\t\tlastTick = Date.now();\r\n\t\t\t\tvol += diff * tick;\r\n\r\n\t\t\t\t// Make sure the volume is in the right bounds.\r\n\t\t\t\tvol = Math.max(0, vol);\r\n\t\t\t\tvol = Math.min(1, vol);\r\n\r\n\t\t\t\t// Round to within 2 decimal points.\r\n\t\t\t\tvol = Math.round(vol * 100) / 100;\r\n\r\n\t\t\t\t// Change the volume.\r\n\t\t\t\tif (self._webAudio) {\r\n\t\t\t\t\tsound._volume = vol;\r\n\t\t\t\t} else {\r\n          self.volume(vol, sound._id, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set the group's volume.\r\n\t\t\t\tif (isGroup) {\r\n\t\t\t\t\tself._volume = vol;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the fade is complete, stop it and fire event.\r\n\t\t\t\tif ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n\t\t\t\t}\r\n\t\t\t}, stepLen);\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n\t\t_stopFade(id) {\r\n\t\t\tconst self = this;\r\n\t\t\tconst sound = self._soundById(id);\r\n\r\n\t\t\tif (sound && sound._interval) {\r\n\t\t\t\tif (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n\t\t\t\t}\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n\t\tloop() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst args = arguments;\r\n\t\t\tlet loop, id, sound;\r\n\r\n\t\t\t// Determine the values for loop and id.\r\n\t\t\tif (args.length === 0) {\r\n\t\t\t\t// Return the grou's loop value.\r\n\t\t\t\treturn self._loop;\r\n\t\t\t} if (args.length === 1) {\r\n\t\t\t\tif (typeof args[0] === 'boolean') {\r\n\t\t\t\t\tloop = args[0];\r\n\t\t\t\t\tself._loop = loop;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Return this sound's loop value.\r\n\t\t\t\t\tsound = self._soundById(parseInt(args[0], 10));\r\n\t\t\t\t\treturn sound ? sound._loop : false;\r\n\t\t\t\t}\r\n\t\t\t} else if (args.length === 2) {\r\n\t\t\t\tloop = args[0];\r\n\t\t\t\tid = parseInt(args[1], 10);\r\n\t\t\t}\r\n\r\n\t\t\t// If no id is passed, get all ID's to be looped.\r\n\t\t\tconst ids = self._getSoundIds(id);\r\n\t\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\t\tsound = self._soundById(ids[i]);\r\n\r\n\t\t\t\tif (sound) {\r\n\t\t\t\t\tsound._loop = loop;\r\n\t\t\t\t\tif (self._webAudio && sound._node && sound._node.bufferSource) {\r\n\t\t\t\t\t\tsound._node.bufferSource.loop = loop;\r\n\t\t\t\t\t\tif (loop) {\r\n\t\t\t\t\t\t\tsound._node.bufferSource.loopStart = sound._start || 0;\r\n\t\t\t\t\t\t\tsound._node.bufferSource.loopEnd = sound._stop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n\t\trate() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst args = arguments;\r\n\t\t\tlet rate, id;\r\n\r\n\t\t\t// Determine the values based on arguments.\r\n\t\t\tif (args.length === 0) {\r\n\t\t\t\t// We will simply return the current rate of the first node.\r\n\t\t\t\tid = self._sounds[0]._id;\r\n\t\t\t} else if (args.length === 1) {\r\n\t\t\t\t// First check if this is an ID, and if not, assume it is a new rate value.\r\n\t\t\t\tconst ids = self._getSoundIds();\r\n\t\t\t\tconst index = ids.indexOf(args[0]);\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tid = parseInt(args[0], 10);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trate = parseFloat(args[0]);\r\n\t\t\t\t}\r\n\t\t\t} else if (args.length === 2) {\r\n\t\t\t\trate = parseFloat(args[0]);\r\n\t\t\t\tid = parseInt(args[1], 10);\r\n\t\t\t}\r\n\r\n\t\t\t// Update the playback rate or return the current value.\r\n\t\t\tlet sound;\r\n\t\t\tif (typeof rate === 'number') {\r\n\t\t\t\t// If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n\t\t\t\tif (self._state !== 'loaded') {\r\n          self._queue.push({\r\n          \tevent: 'rate',\r\n          \taction() {\r\n              self.rate.apply(self, args);\r\n          \t}\r\n          });\r\n\r\n          return self;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set the group rate.\r\n\t\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\t\tself._rate = rate;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update one or all volumes.\r\n\t\t\t\tid = self._getSoundIds(id);\r\n\t\t\t\tfor (let i = 0; i < id.length; i++) {\r\n\t\t\t\t\t// Get the sound.\r\n\t\t\t\t\tsound = self._soundById(id[i]);\r\n\r\n\t\t\t\t\tif (sound) {\r\n\t\t\t\t\t\t// Keep track of our position when the rate changed and update the playback\r\n\t\t\t\t\t\t// start position so we can properly adjust the seek position for time elapsed.\r\n\t\t\t\t\t\tsound._rateSeek = self.seek(id[i]);\r\n\t\t\t\t\t\tsound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n\t\t\t\t\t\tsound._rate = rate;\r\n\r\n\t\t\t\t\t\t// Change the playback rate.\r\n\t\t\t\t\t\tif (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n\t\t\t\t\t\t} else if (sound._node) {\r\n\t\t\t\t\t\t\tsound._node.playbackRate = rate;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset the timers.\r\n\t\t\t\t\t\tconst seek = self.seek(id[i]);\r\n\t\t\t\t\t\tconst duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n\t\t\t\t\t\tconst timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n\t\t\t\t\t\t// Start a new end timer if sound is already playing.\r\n\t\t\t\t\t\tif (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n\t\t\t\t\t\t}\r\n\r\n            self._emit('rate', sound._id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsound = self._soundById(id);\r\n\t\t\t\treturn sound ? sound._rate : self._rate;\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n\t\tseek() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst args = arguments;\r\n\t\t\tlet seek, id;\r\n\r\n\t\t\t// Determine the values based on arguments.\r\n\t\t\tif (args.length === 0) {\r\n\t\t\t\t// We will simply return the current position of the first node.\r\n\t\t\t\tid = self._sounds[0]._id;\r\n\t\t\t} else if (args.length === 1) {\r\n\t\t\t\t// First check if this is an ID, and if not, assume it is a new seek position.\r\n\t\t\t\tconst ids = self._getSoundIds();\r\n\t\t\t\tconst index = ids.indexOf(args[0]);\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tid = parseInt(args[0], 10);\r\n\t\t\t\t} else if (self._sounds.length) {\r\n\t\t\t\t\tid = self._sounds[0]._id;\r\n\t\t\t\t\tseek = parseFloat(args[0]);\r\n\t\t\t\t}\r\n\t\t\t} else if (args.length === 2) {\r\n\t\t\t\tseek = parseFloat(args[0]);\r\n\t\t\t\tid = parseInt(args[1], 10);\r\n\t\t\t}\r\n\r\n\t\t\t// If there is no ID, bail out.\r\n\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\t// If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n\t\t\tif (self._state !== 'loaded') {\r\n        self._queue.push({\r\n        \tevent: 'seek',\r\n        \taction() {\r\n            self.seek.apply(self, args);\r\n        \t}\r\n        });\r\n\r\n        return self;\r\n\t\t\t}\r\n\r\n\t\t\t// Get the sound.\r\n\t\t\tconst sound = self._soundById(id);\r\n\r\n\t\t\tif (sound) {\r\n\t\t\t\tif (typeof seek === 'number' && seek >= 0) {\r\n\t\t\t\t\t// Pause the sound and update position for restarting playback.\r\n\t\t\t\t\tconst playing = self.playing(id);\r\n\t\t\t\t\tif (playing) {\r\n            self.pause(id, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move the position of the track and cancel timer.\r\n\t\t\t\t\tsound._seek = seek;\r\n\t\t\t\t\tsound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Restart the playback if the sound was playing.\r\n          if (playing) {\r\n            self.play(id, true);\r\n          }\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node) {\r\n          \tsound._node.currentTime = seek;\r\n          }\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n          \tvar emitSeek = function () {\r\n          \t\tif (!self._playLock) {\r\n                self._emit('seek', id);\r\n          \t\t} else {\r\n                setTimeout(emitSeek, 0);\r\n          \t\t}\r\n          \t};\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            self._emit('seek', id);\r\n          }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (self._webAudio) {\r\n\t\t\t\t\t\tconst realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n\t\t\t\t\t\tconst rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n\t\t\t\t\t\treturn sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn sound._node.currentTime;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n\t\tplaying(id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// Check the passed sound ID (if any).\r\n\t\t\tif (typeof id === 'number') {\r\n\t\t\t\tconst sound = self._soundById(id);\r\n\t\t\t\treturn sound ? !sound._paused : false;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, loop through all sounds and check if any are playing.\r\n\t\t\tfor (let i = 0; i < self._sounds.length; i++) {\r\n\t\t\t\tif (!self._sounds[i]._paused) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n\t\tduration(id) {\r\n\t\t\tconst self = this;\r\n\t\t\tlet duration = self._duration;\r\n\r\n\t\t\t// If we pass an ID, get the sound and return the sprite length.\r\n\t\t\tconst sound = self._soundById(id);\r\n\t\t\tif (sound) {\r\n\t\t\t\tduration = self._sprite[sound._sprite][1] / 1000;\r\n\t\t\t}\r\n\r\n\t\t\treturn duration;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n\t\tstate() {\r\n\t\t\treturn this._state;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n\t\tunload() {\r\n\t\t\tlet self = this;\r\n\r\n\t\t\t// Stop playing any active sounds.\r\n\t\t\tconst sounds = self._sounds;\r\n\t\t\tfor (var i = 0; i < sounds.length; i++) {\r\n\t\t\t\t// Stop the sound if it is currently playing.\r\n\t\t\t\tif (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove the source or disconnect.\r\n\t\t\t\tif (!self._webAudio) {\r\n\t\t\t\t\t// Set the source to 0-second silence to stop any downloading (except in IE).\r\n\t\t\t\t\tconst checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n\t\t\t\t\tif (!checkIE) {\r\n\t\t\t\t\t\tsounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n\t\t\t\t\t}\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Empty out all of the nodes.\r\n\t\t\t\tdelete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n\r\n        // Remove the references in the global Howler object.\r\n        const index = Howler._howls.indexOf(self);\r\n        if (index >= 0) {\r\n          Howler._howls.splice(index, 1);\r\n        }\r\n\t\t\t}\r\n\r\n\t\t\t// Delete this sound from the cache (if no other Howl is using it).\r\n\t\t\tlet remCache = true;\r\n\t\t\tfor (i = 0; i < Howler._howls.length; i++) {\r\n\t\t\t\tif (Howler._howls[i]._src === self._src) {\r\n\t\t\t\t\tremCache = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (cache && remCache) {\r\n\t\t\t\tdelete cache[self._src];\r\n\t\t\t}\r\n\r\n\t\t\t// Clear global errors.\r\n\t\t\tHowler.noAudio = false;\r\n\r\n\t\t\t// Clear out `self`.\r\n\t\t\tself._state = 'unloaded';\r\n\t\t\tself._sounds = [];\r\n\t\t\tself = null;\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n\t\ton(event, fn, id, once) {\r\n\t\t\tconst self = this;\r\n\t\t\tconst events = self['_on' + event];\r\n\r\n\t\t\tif (typeof fn === 'function') {\r\n        events.push(once ? {id, fn, once} : {id, fn});\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n\t\toff(event, fn, id) {\r\n\t\t\tconst self = this;\r\n\t\t\tconst events = self['_on' + event];\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\t// Allow passing just an event and ID.\r\n\t\t\tif (typeof fn === 'number') {\r\n\t\t\t\tid = fn;\r\n\t\t\t\tfn = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (fn || id) {\r\n\t\t\t\t// Loop through event store and remove the passed function.\r\n\t\t\t\tfor (i = 0; i < events.length; i++) {\r\n\t\t\t\t\tconst isId = (id === events[i].id);\r\n\t\t\t\t\tif (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (event) {\r\n\t\t\t\t// Clear out all events of this type.\r\n\t\t\t\tself['_on' + event] = [];\r\n\t\t\t} else {\r\n\t\t\t\t// Clear out all events of every type.\r\n\t\t\t\tconst keys = Object.keys(self);\r\n\t\t\t\tfor (i = 0; i < keys.length; i++) {\r\n\t\t\t\t\tif ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n\t\t\t\t\t\tself[keys[i]] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n\t\tonce(event, fn, id) {\r\n\t\t\tconst self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n\t\t_emit(event, id, msg) {\r\n\t\t\tconst self = this;\r\n\t\t\tconst events = self['_on' + event];\r\n\r\n\t\t\t// Loop through event store and fire all functions.\r\n\t\t\tfor (let i = events.length - 1; i >= 0; i--) {\r\n\t\t\t\t// Only fire the listener if the correct ID is used.\r\n\t\t\t\tif (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function (fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n\t\t_loadQueue(event) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\tif (self._queue.length > 0) {\r\n\t\t\t\tconst task = self._queue[0];\r\n\r\n\t\t\t\t// Remove this task if a matching event was passed.\r\n\t\t\t\tif (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run the task if no event type is passed.\r\n\t\t\t\tif (!event) {\r\n          task.action();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n\t\t_ended(sound) {\r\n\t\t\tconst self = this;\r\n\t\t\tconst sprite = sound._sprite;\r\n\r\n\t\t\t// If we are using IE and there was network latency we may be clipping\r\n\t\t\t// audio before it completes playing. Lets check the node to make sure it\r\n\t\t\t// believes it has completed, before ending the playback.\r\n\t\t\tif (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n\t\t\t}\r\n\r\n\t\t\t// Should this sound loop?\r\n\t\t\tconst loop = Boolean(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        const timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n      \tsound._paused = true;\r\n      \tsound._ended = true;\r\n      \tsound._seek = sound._start || 0;\r\n      \tsound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id);\r\n      }\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n\t\t_clearTimer(id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\tif (self._endTimers[id]) {\r\n\t\t\t\t// Clear the timeout or remove the ended listener.\r\n\t\t\t\tif (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst sound = self._soundById(id);\r\n\t\t\t\t\tif (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete self._endTimers[id];\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n\t\t_soundById(id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// Loop through all sounds and find the one with this ID.\r\n\t\t\tfor (let i = 0; i < self._sounds.length; i++) {\r\n\t\t\t\tif (id === self._sounds[i]._id) {\r\n\t\t\t\t\treturn self._sounds[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n\t\t_inactiveSound() {\r\n\t\t\tconst self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (let i = 0; i < self._sounds.length; i++) {\r\n      \tif (self._sounds[i]._ended) {\r\n      \t\treturn self._sounds[i].reset();\r\n      \t}\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n\t\t_drain() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst limit = self._pool;\r\n\t\t\tlet cnt = 0;\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\t// If there are less sounds than the max pool size, we are done.\r\n\t\t\tif (self._sounds.length < limit) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Count the number of inactive sounds.\r\n\t\t\tfor (i = 0; i < self._sounds.length; i++) {\r\n\t\t\t\tif (self._sounds[i]._ended) {\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove excess inactive sounds, going in reverse order.\r\n\t\t\tfor (i = self._sounds.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (cnt <= limit) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (self._sounds[i]._ended) {\r\n\t\t\t\t\t// Disconnect the audio source when using Web Audio.\r\n\t\t\t\t\tif (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n\t\t\t\t\t}\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n\t\t_getSoundIds(id) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\tconst ids = [];\r\n\t\t\t\tfor (let i = 0; i < self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn ids;\r\n\t\t\t}\r\n\t\t\treturn [id];\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n\t\t_refreshBuffer(sound) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// Setup the buffer source for playback.\r\n\t\t\tsound._node.bufferSource = Howler.ctx.createBufferSource();\r\n\t\t\tsound._node.bufferSource.buffer = cache[self._src];\r\n\r\n\t\t\t// Connect to the correct node.\r\n\t\t\tif (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n\t\t\t} else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n\t\t\t}\r\n\r\n\t\t\t// Setup looping and playback rate.\r\n\t\t\tsound._node.bufferSource.loop = sound._loop;\r\n\t\t\tif (sound._loop) {\r\n\t\t\t\tsound._node.bufferSource.loopStart = sound._start || 0;\r\n\t\t\t\tsound._node.bufferSource.loopEnd = sound._stop;\r\n\t\t\t}\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n\t\t_cleanBuffer(node) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\tif (Howler._scratchBuffer) {\r\n\t\t\t\tnode.bufferSource.addEventListener('ended', null);\r\n        node.bufferSource.disconnect(0);\r\n        try {\r\n        \tnode.bufferSource.buffer = Howler._scratchBuffer;\r\n        } catch (e) {}\r\n\t\t\t}\r\n\t\t\tnode.bufferSource = null;\r\n\r\n\t\t\treturn self;\r\n\t\t}\r\n\t};\r\n\r\n\t/** Single Sound Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n\tvar Sound = function (howl) {\r\n\t\tthis._parent = howl;\r\n    this.init();\r\n\t};\r\n\tSound.prototype = {\r\n\t\t/**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n\t\tinit() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst parent = self._parent;\r\n\r\n\t\t\t// Setup the default parameters.\r\n\t\t\tself._muted = parent._muted;\r\n\t\t\tself._loop = parent._loop;\r\n\t\t\tself._volume = parent._volume;\r\n\t\t\tself._rate = parent._rate;\r\n\t\t\tself._seek = 0;\r\n\t\t\tself._paused = true;\r\n\t\t\tself._ended = true;\r\n\t\t\tself._sprite = '__default';\r\n\r\n\t\t\t// Generate a unique ID for this sound.\r\n\t\t\tself._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n\t\tcreate() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst parent = self._parent;\r\n\t\t\tconst volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n\t\t\tif (parent._webAudio) {\r\n\t\t\t\t// Create the gain node for controlling volume (the source will connect to this).\r\n\t\t\t\tself._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n\t\t\t} else {\r\n\t\t\t\tself._node = new Audio();\r\n\r\n\t\t\t\t// Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n\t\t\t\tself._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n\t\treset() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst parent = self._parent;\r\n\r\n\t\t\t// Reset all of the parameters of this sound.\r\n\t\t\tself._muted = parent._muted;\r\n\t\t\tself._loop = parent._loop;\r\n\t\t\tself._volume = parent._volume;\r\n\t\t\tself._rate = parent._rate;\r\n\t\t\tself._seek = 0;\r\n\t\t\tself._rateSeek = 0;\r\n\t\t\tself._paused = true;\r\n\t\t\tself._ended = true;\r\n\t\t\tself._sprite = '__default';\r\n\r\n\t\t\t// Generate a new ID so that it isn't confused with the previous sound.\r\n\t\t\tself._id = ++Howler._counter;\r\n\r\n\t\t\treturn self;\r\n\t\t},\r\n\r\n\t\t/**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n\t\t_errorListener() {\r\n\t\t\tconst self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n\t\t},\r\n\r\n\t\t/**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n\t\t_loadListener() {\r\n\t\t\tconst self = this;\r\n\t\t\tconst parent = self._parent;\r\n\r\n\t\t\t// Round up the duration to account for the lower precision in HTML5 Audio.\r\n\t\t\tparent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n\t\t\t// Setup a sprite if none is defined.\r\n\t\t\tif (Object.keys(parent._sprite).length === 0) {\r\n\t\t\t\tparent._sprite = {__default: [0, parent._duration * 1000]};\r\n\t\t\t}\r\n\r\n\t\t\tif (parent._state !== 'loaded') {\r\n\t\t\t\tparent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n\t\t\t}\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\t\t}\r\n\t};\r\n\r\n\t/** Helper Methods **/\r\n\t/***************************************************************************/\r\n\r\n\tvar cache = {};\r\n\r\n\t/**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n\tvar loadBuffer = function (self) {\r\n\t\tconst url = self._src;\r\n\r\n\t\t// Check if the buffer has already been cached and use it instead.\r\n\t\tif (cache[url]) {\r\n\t\t\t// Set the duration from the cache.\r\n\t\t\tself._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n\t\t}\r\n\r\n\t\tif (/^data:[^;]+;base64,/.test(url)) {\r\n\t\t\t// Decode the base64 data URI without XHR, since some browsers don't support it.\r\n\t\t\tconst data = atob(url.split(',')[1]);\r\n\t\t\tconst dataView = new Uint8Array(data.length);\r\n\t\t\tfor (let i = 0; i < data.length; ++i) {\r\n\t\t\t\tdataView[i] = data.charCodeAt(i);\r\n\t\t\t}\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n\t\t} else {\r\n\t\t\t// Load the buffer from the URL.\r\n\t\t\tconst xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.addEventListener('load', () => {\r\n      \t// Make sure we get a successful response back.\r\n      \tconst code = (String(xhr.status))[0];\r\n      \tif (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n      \t}\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      });\r\n      xhr.addEventListener('error', () => {\r\n      \t// If there is an error, switch to HTML5 Audio.\r\n      \tif (self._webAudio) {\r\n      \t\tself._html5 = true;\r\n      \t\tself._webAudio = false;\r\n      \t\tself._sounds = [];\r\n      \t\tdelete cache[url];\r\n          self.load();\r\n      \t}\r\n      });\r\n      safeXhrSend(xhr);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n\tvar safeXhrSend = function (xhr) {\r\n\t\ttry {\r\n      xhr.send();\r\n\t\t} catch (e) {\r\n      xhr.onerror();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n\tvar decodeAudioData = function (arraybuffer, self) {\r\n    // Decode the buffer into an audio source.\r\n    Howler.ctx.decodeAudioData(arraybuffer, buffer => {\r\n    \tif (buffer && self._sounds.length > 0) {\r\n    \t\tcache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n    \t}\r\n    }, () => {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    });\r\n\t};\r\n\r\n\t/**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n\tvar loadSound = function (self, buffer) {\r\n\t\t// Set the duration.\r\n\t\tif (buffer && !self._duration) {\r\n\t\t\tself._duration = buffer.duration;\r\n\t\t}\r\n\r\n\t\t// Setup a sprite if none is defined.\r\n\t\tif (Object.keys(self._sprite).length === 0) {\r\n\t\t\tself._sprite = {__default: [0, self._duration * 1000]};\r\n\t\t}\r\n\r\n\t\t// Fire the loaded event.\r\n\t\tif (self._state !== 'loaded') {\r\n\t\t\tself._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n\tvar setupAudioContext = function () {\r\n\t\t// Check if we are using Web Audio and setup the AudioContext if we are.\r\n\t\ttry {\r\n\t\t\tif (typeof AudioContext !== 'undefined') {\r\n\t\t\t\tHowler.ctx = new AudioContext();\r\n\t\t\t} else if (typeof webkitAudioContext !== 'undefined') {\r\n\t\t\t\tHowler.ctx = new webkitAudioContext();\r\n\t\t\t} else {\r\n\t\t\t\tHowler.usingWebAudio = false;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tHowler.usingWebAudio = false;\r\n\t\t}\r\n\r\n\t\t// Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n\t\t// If it is, disable Web Audio as it causes crashing.\r\n\t\tconst iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n\t\tconst appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n\t\tconst version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n\t\tif (iOS && version && version < 9) {\r\n\t\t\tconst safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n\t\t\tif (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n\t\t\t\tHowler.usingWebAudio = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n\t\tif (Howler.usingWebAudio) {\r\n\t\t\tHowler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n\t\t}\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n\t};\r\n\r\n\t// Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n\tif (typeof define === 'function' && define.amd) {\r\n    define([], () => {\r\n    \treturn {\r\n    \t\tHowler,\r\n    \t\tHowl\r\n    \t};\r\n    });\r\n\t}\r\n\r\n\t// Add support for CommonJS libraries such as browserify.\r\n\r\n\t// Define globally in case AMD is not available or unused.\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow.HowlerGlobal = HowlerGlobal;\r\n\t\twindow.Howler = Howler;\r\n\t\twindow.Howl = Howl;\r\n\t\twindow.Sound = Sound;\r\n\t} else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n\t\tglobal.HowlerGlobal = HowlerGlobal;\r\n\t\tglobal.Howler = Howler;\r\n\t\tglobal.Howl = Howl;\r\n\t\tglobal.Sound = Sound;\r\n\t}\r\n})();\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *\r\n *  howler.js v2.0.9\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2018, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function () {\r\n\t'use strict';\r\n\r\n\t// Setup default properties.\r\n\tHowlerGlobal.prototype._pos = [0, 0, 0];\r\n\tHowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n\t/** Global Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n\tHowlerGlobal.prototype.stereo = function (pan) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self.ctx || !self.ctx.listener) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// Loop through all Howls and update their stereo panning.\r\n\t\tfor (let i = self._howls.length - 1; i >= 0; i--) {\r\n      self._howls[i].stereo(pan);\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n\tHowlerGlobal.prototype.pos = function (x, y, z) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self.ctx || !self.ctx.listener) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// Set the defaults for optional 'y' & 'z'.\r\n\t\ty = (typeof y !== 'number') ? self._pos[1] : y;\r\n\t\tz = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n\t\tif (typeof x === 'number') {\r\n\t\t\tself._pos = [x, y, z];\r\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n\t\t} else {\r\n\t\t\treturn self._pos;\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n\tHowlerGlobal.prototype.orientation = function (x, y, z, xUp, yUp, zUp) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self.ctx || !self.ctx.listener) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// Set the defaults for optional 'y' & 'z'.\r\n\t\tconst or = self._orientation;\r\n\t\ty = (typeof y !== 'number') ? or[1] : y;\r\n\t\tz = (typeof z !== 'number') ? or[2] : z;\r\n\t\txUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n\t\tyUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n\t\tzUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n\t\tif (typeof x === 'number') {\r\n\t\t\tself._orientation = [x, y, z, xUp, yUp, zUp];\r\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n\t\t} else {\r\n\t\t\treturn or;\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/** Group Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n\tHowl.prototype.init = (function (_super) {\r\n\t\treturn function (o) {\r\n\t\t\tconst self = this;\r\n\r\n\t\t\t// Setup user-defined default properties.\r\n\t\t\tself._orientation = o.orientation || [1, 0, 0];\r\n\t\t\tself._stereo = o.stereo || null;\r\n\t\t\tself._pos = o.pos || null;\r\n\t\t\tself._pannerAttr = {\r\n\t\t\t\tconeInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n\t\t\t\tconeOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n\t\t\t\tconeOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n\t\t\t\tdistanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n\t\t\t\tmaxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n\t\t\t\tpanningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n\t\t\t\trefDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n\t\t\t\trolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n\t\t\t};\r\n\r\n\t\t\t// Setup event listeners.\r\n\t\t\tself._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n\t\t\tself._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n\t\t\tself._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n\t\t\t// Complete initilization with howler.js core's init function.\r\n\t\t\treturn _super.call(this, o);\r\n\t\t};\r\n\t})(Howl.prototype.init);\r\n\r\n\t/**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n\tHowl.prototype.stereo = function (pan, id) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self._webAudio) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n\t\tif (self._state !== 'loaded') {\r\n      self._queue.push({\r\n      \tevent: 'stereo',\r\n      \taction() {\r\n          self.stereo(pan, id);\r\n      \t}\r\n      });\r\n\r\n      return self;\r\n\t\t}\r\n\r\n\t\t// Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n\t\tconst pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n\t\t// Setup the group's stereo panning if no ID is passed.\r\n\t\tif (typeof id === 'undefined') {\r\n\t\t\t// Return the group's stereo panning if no parameters are passed.\r\n\t\t\tif (typeof pan === 'number') {\r\n\t\t\t\tself._stereo = pan;\r\n\t\t\t\tself._pos = [pan, 0, 0];\r\n\t\t\t} else {\r\n\t\t\t\treturn self._stereo;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Change the streo panning of one or all sounds in group.\r\n\t\tconst ids = self._getSoundIds(id);\r\n\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\t// Get the sound.\r\n\t\t\tconst sound = self._soundById(ids[i]);\r\n\r\n\t\t\tif (sound) {\r\n\t\t\t\tif (typeof pan === 'number') {\r\n\t\t\t\t\tsound._stereo = pan;\r\n\t\t\t\t\tsound._pos = [pan, 0, 0];\r\n\r\n\t\t\t\t\tif (sound._node) {\r\n\t\t\t\t\t\t// If we are falling back, make sure the panningModel is equalpower.\r\n\t\t\t\t\t\tsound._pannerAttr.panningModel = 'equalpower';\r\n\r\n\t\t\t\t\t\t// Check if there is a panner setup and create a new one if not.\r\n\t\t\t\t\t\tif (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (pannerType === 'spatial') {\r\n              sound._panner.setPosition(pan, 0, 0);\r\n\t\t\t\t\t\t} else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n          self._emit('stereo', sound._id);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn sound._stereo;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n\tHowl.prototype.pos = function (x, y, z, id) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self._webAudio) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n\t\tif (self._state !== 'loaded') {\r\n      self._queue.push({\r\n      \tevent: 'pos',\r\n      \taction() {\r\n          self.pos(x, y, z, id);\r\n      \t}\r\n      });\r\n\r\n      return self;\r\n\t\t}\r\n\r\n\t\t// Set the defaults for optional 'y' & 'z'.\r\n\t\ty = (typeof y !== 'number') ? 0 : y;\r\n\t\tz = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n\t\t// Setup the group's spatial position if no ID is passed.\r\n\t\tif (typeof id === 'undefined') {\r\n\t\t\t// Return the group's spatial position if no parameters are passed.\r\n\t\t\tif (typeof x === 'number') {\r\n\t\t\t\tself._pos = [x, y, z];\r\n\t\t\t} else {\r\n\t\t\t\treturn self._pos;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Change the spatial position of one or all sounds in group.\r\n\t\tconst ids = self._getSoundIds(id);\r\n\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\t// Get the sound.\r\n\t\t\tconst sound = self._soundById(ids[i]);\r\n\r\n\t\t\tif (sound) {\r\n\t\t\t\tif (typeof x === 'number') {\r\n\t\t\t\t\tsound._pos = [x, y, z];\r\n\r\n\t\t\t\t\tif (sound._node) {\r\n\t\t\t\t\t\t// Check if there is a panner setup and create a new one if not.\r\n\t\t\t\t\t\tif (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n\t\t\t\t\t\t}\r\n\r\n            sound._panner.setPosition(x, y, z);\r\n\t\t\t\t\t}\r\n\r\n          self._emit('pos', sound._id);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn sound._pos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n\tHowl.prototype.orientation = function (x, y, z, id) {\r\n\t\tconst self = this;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self._webAudio) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n\t\tif (self._state !== 'loaded') {\r\n      self._queue.push({\r\n      \tevent: 'orientation',\r\n      \taction() {\r\n          self.orientation(x, y, z, id);\r\n      \t}\r\n      });\r\n\r\n      return self;\r\n\t\t}\r\n\r\n\t\t// Set the defaults for optional 'y' & 'z'.\r\n\t\ty = (typeof y !== 'number') ? self._orientation[1] : y;\r\n\t\tz = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n\t\t// Setup the group's spatial orientation if no ID is passed.\r\n\t\tif (typeof id === 'undefined') {\r\n\t\t\t// Return the group's spatial orientation if no parameters are passed.\r\n\t\t\tif (typeof x === 'number') {\r\n\t\t\t\tself._orientation = [x, y, z];\r\n\t\t\t} else {\r\n\t\t\t\treturn self._orientation;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Change the spatial orientation of one or all sounds in group.\r\n\t\tconst ids = self._getSoundIds(id);\r\n\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\t// Get the sound.\r\n\t\t\tconst sound = self._soundById(ids[i]);\r\n\r\n\t\t\tif (sound) {\r\n\t\t\t\tif (typeof x === 'number') {\r\n\t\t\t\t\tsound._orientation = [x, y, z];\r\n\r\n\t\t\t\t\tif (sound._node) {\r\n\t\t\t\t\t\t// Check if there is a panner setup and create a new one if not.\r\n\t\t\t\t\t\tif (!sound._panner) {\r\n\t\t\t\t\t\t\t// Make sure we have a position to setup the node with.\r\n\t\t\t\t\t\t\tif (!sound._pos) {\r\n\t\t\t\t\t\t\t\tsound._pos = self._pos || [0, 0, -0.5];\r\n\t\t\t\t\t\t\t}\r\n\r\n              setupPanner(sound, 'spatial');\r\n\t\t\t\t\t\t}\r\n\r\n            sound._panner.setOrientation(x, y, z);\r\n\t\t\t\t\t}\r\n\r\n          self._emit('orientation', sound._id);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn sound._orientation;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n\tHowl.prototype.pannerAttr = function () {\r\n\t\tconst self = this;\r\n\t\tconst args = arguments;\r\n\t\tlet o, id, sound;\r\n\r\n\t\t// Stop right here if not using Web Audio.\r\n\t\tif (!self._webAudio) {\r\n\t\t\treturn self;\r\n\t\t}\r\n\r\n\t\t// Determine the values based on arguments.\r\n\t\tif (args.length === 0) {\r\n\t\t\t// Return the group's panner attribute values.\r\n\t\t\treturn self._pannerAttr;\r\n\t\t} if (args.length === 1) {\r\n\t\t\tif (typeof args[0] === 'object') {\r\n\t\t\t\to = args[0];\r\n\r\n\t\t\t\t// Set the grou's panner attribute values.\r\n\t\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\t\tif (!o.pannerAttr) {\r\n\t\t\t\t\t\to.pannerAttr = {\r\n\t\t\t\t\t\t\tconeInnerAngle: o.coneInnerAngle,\r\n\t\t\t\t\t\t\tconeOuterAngle: o.coneOuterAngle,\r\n\t\t\t\t\t\t\tconeOuterGain: o.coneOuterGain,\r\n\t\t\t\t\t\t\tdistanceModel: o.distanceModel,\r\n\t\t\t\t\t\t\tmaxDistance: o.maxDistance,\r\n\t\t\t\t\t\t\trefDistance: o.refDistance,\r\n\t\t\t\t\t\t\trolloffFactor: o.rolloffFactor,\r\n\t\t\t\t\t\t\tpanningModel: o.panningModel\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself._pannerAttr = {\r\n\t\t\t\t\t\tconeInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n\t\t\t\t\t\tconeOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n\t\t\t\t\t\tconeOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n\t\t\t\t\t\tdistanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n\t\t\t\t\t\tmaxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n\t\t\t\t\t\trefDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n\t\t\t\t\t\trolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n\t\t\t\t\t\tpanningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Return this sound's panner attribute values.\r\n\t\t\t\tsound = self._soundById(parseInt(args[0], 10));\r\n\t\t\t\treturn sound ? sound._pannerAttr : self._pannerAttr;\r\n\t\t\t}\r\n\t\t} else if (args.length === 2) {\r\n\t\t\to = args[0];\r\n\t\t\tid = parseInt(args[1], 10);\r\n\t\t}\r\n\r\n\t\t// Update the values of the specified sounds.\r\n\t\tconst ids = self._getSoundIds(id);\r\n\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\tsound = self._soundById(ids[i]);\r\n\r\n\t\t\tif (sound) {\r\n\t\t\t\t// Merge the new values into the sound.\r\n\t\t\t\tlet pa = sound._pannerAttr;\r\n\t\t\t\tpa = {\r\n\t\t\t\t\tconeInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n\t\t\t\t\tconeOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n\t\t\t\t\tconeOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n\t\t\t\t\tdistanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n\t\t\t\t\tmaxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n\t\t\t\t\trefDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n\t\t\t\t\trolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n\t\t\t\t\tpanningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Update the panner values or create a new panner if none exists.\r\n\t\t\t\tconst panner = sound._panner;\r\n\t\t\t\tif (panner) {\r\n\t\t\t\t\tpanner.coneInnerAngle = pa.coneInnerAngle;\r\n\t\t\t\t\tpanner.coneOuterAngle = pa.coneOuterAngle;\r\n\t\t\t\t\tpanner.coneOuterGain = pa.coneOuterGain;\r\n\t\t\t\t\tpanner.distanceModel = pa.distanceModel;\r\n\t\t\t\t\tpanner.maxDistance = pa.maxDistance;\r\n\t\t\t\t\tpanner.refDistance = pa.refDistance;\r\n\t\t\t\t\tpanner.rolloffFactor = pa.rolloffFactor;\r\n\t\t\t\t\tpanner.panningModel = pa.panningModel;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Make sure we have a position to setup the node with.\r\n\t\t\t\t\tif (!sound._pos) {\r\n\t\t\t\t\t\tsound._pos = self._pos || [0, 0, -0.5];\r\n\t\t\t\t\t}\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t/** Single Sound Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n\tSound.prototype.init = (function (_super) {\r\n\t\treturn function () {\r\n\t\t\tconst self = this;\r\n\t\t\tconst parent = self._parent;\r\n\r\n\t\t\t// Setup user-defined default properties.\r\n\t\t\tself._orientation = parent._orientation;\r\n\t\t\tself._stereo = parent._stereo;\r\n\t\t\tself._pos = parent._pos;\r\n\t\t\tself._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n\t\t};\r\n\t})(Sound.prototype.init);\r\n\r\n\t/**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n\tSound.prototype.reset = (function (_super) {\r\n\t\treturn function () {\r\n\t\t\tconst self = this;\r\n\t\t\tconst parent = self._parent;\r\n\r\n\t\t\t// Reset all spatial plugin properties on this sound.\r\n\t\t\tself._orientation = parent._orientation;\r\n\t\t\tself._pos = parent._pos;\r\n\t\t\tself._pannerAttr = parent._pannerAttr;\r\n\r\n\t\t\t// Complete resetting of the sound.\r\n\t\t\treturn _super.call(this);\r\n\t\t};\r\n\t})(Sound.prototype.reset);\r\n\r\n\t/** Helper Methods **/\r\n\t/***************************************************************************/\r\n\r\n\t/**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n\tvar setupPanner = function (sound, type) {\r\n\t\ttype = type || 'spatial';\r\n\r\n\t\t// Create the new panner node.\r\n\t\tif (type === 'spatial') {\r\n\t\t\tsound._panner = Howler.ctx.createPanner();\r\n\t\t\tsound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n\t\t\tsound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n\t\t\tsound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n\t\t\tsound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n\t\t\tsound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n\t\t\tsound._panner.refDistance = sound._pannerAttr.refDistance;\r\n\t\t\tsound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n\t\t\tsound._panner.panningModel = sound._pannerAttr.panningModel;\r\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n\t\t} else {\r\n\t\t\tsound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n\t\t}\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n\t};\r\n})();\r\n\r\nif (typeof exports !== 'undefined') {\r\n\texports.Howler = Howler;\r\n\texports.Howl = Howl;\r\n}\r\n","'use strict';\r\n\r\nimport {Howl, Howler} from './howler';\r\nimport {so} from './soundObject.js';\r\n\r\n// Meow.panner.defaults= {\r\n//     panningModel:'HRTF',\r\n// \tmaxDistance:2000\r\n//\r\n//\r\n// };\r\n\r\nclass SoundSource {\r\n\tconstructor(file, x = 0, y = 0, z = 0, loop = true) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.loop = loop;\r\n\t\tthis.sound = so.create(file);\r\n\r\n\t\tthis.sound.loop = loop;\r\n\t\tthis.sound.pos(this.x, this.y, this.z);\r\n\t\tthis.rate = 1;\r\n\t\tthis.speed = 0;\r\n\t\tthis.minRate = 0.8;\r\n\t\tthis.maxRate = 1.2;\r\n\t\tthis.toDestroy = false;\r\n\t\tthis.rateShiftSpeed = 0.015;\r\n\t\t// This.sound.currentPosition = getRandomArbitrary(0, this.sound.duration);\r\n\t\tthis.sound.currentPosition = 0;\r\n\t}\r\n\r\n\tplay() {\r\n\t\t// This.sound.seek(0);\r\n\t\tthis.sound.play();\r\n\t}\r\n\r\n\tpos(x, y, z) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.sound.pos(this.x, this.y, this.z);\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t}\r\n\r\n\tsetDoppler(z1, speed, direction) {\r\n\t\tif (speed >= 0) {\r\n\t\t\tif (direction == -1) {\r\n\t\t\t\tspeed += this.speed;\r\n\t\t\t\t// This.rate = 1+Math.sin(((speed/10000)*(this.z-z1)));\r\n\t\t\t\tvar freq = 44100 * (1 - (speed / 240));\r\n\t\t\t\tthis.rate = freq / 44100;\r\n\t\t\t} else {\r\n\t\t\t\tspeed += this.speed;\r\n\t\t\t\t// This.rate = 1-Math.sin(((speed/10000)*(z1-this.z)));\r\n\t\t\t\tvar freq = 44100 / (1 - (speed / 240));\r\n\t\t\t\tthis.rate = freq / 44100;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.rate = 1;\r\n\t\t}\r\n\r\n\t\t// If (this.rate > this.maxRate) this.rate = this.maxRate;\r\n\t\t// if (this.rate < this.minRate) this.rate = this.minRate;\r\n\t\t// this.sound.playbackRate = this.rate;\r\n\t\tif (this.rate > this.sound.playbackRate + this.rateShiftSpeed) {\r\n\t\t\tthis.sound.playbackRate += this.rateShiftSpeed;\r\n\t\t} else if (this.rate < this.sound.playbackRate - this.rateShiftSpeed) {\r\n\t\t\tthis.sound.playbackRate -= this.rateShiftSpeed;\r\n\t\t}\r\n\t}\r\n\r\n\tsetSpeed(speed) {\r\n\t\tthis.speed = speed;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.sound.unload();\r\n\t\tthis.toDestroy = true;\r\n\t}\r\n}\r\n\r\nexport {SoundSource};\r\n","import {SoundSource} from './soundSource.js';\r\nimport {so} from './soundObject.js';\r\n\r\nclass SoundHandler {\r\n\tconstructor(directional = false) {\r\n\t\tthis.staticSounds = [];\r\n\t\tthis.dynamicSounds = [];\r\n\t\tthis.currentDynamicSound = 0;\r\n\t\tthis.maxDynamicSounds = 512;\r\n\t\tthis.currentStaticSound = 0;\r\n\t\tthis.maxStaticSounds = 512;\r\n\t\tthis.reuseSounds = true;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.directional = directional;\r\n\t}\r\n\r\n\tplayStatic(file, loop = 1, slot = -1) {\r\n\t\tif (slot = -1) {\r\n\t\t\tslot = this.findFreeStaticSlot();\r\n\t\t}\r\n\t\tthis.staticSounds[slot] = new SoundItem(file, this.directional);\r\n\t\tif (loop == 1) {\r\n\t\t\tthis.staticSounds[slot].sound.loop = true;\r\n\t\t}\r\n\t\tthis.staticSounds[slot].sound.play();\r\n\t\tconsole.log('slot ' + slot);\r\n\t\treturn slot;\r\n\t}\r\n\r\n\tfindFreeStaticSlot() {\r\n\t\tfor (let i = 0; i < this.maxStaticSounds; i++) {\r\n\t\t\tif (this.staticSounds[i] == -1 || typeof this.staticSounds[i] === 'undefined') {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.currentStaticSound < this.maxStaticSounds) {\r\n\t\t\tthis.currentStaticSound++;\r\n\t\t\treturn this.currentStaticSound;\r\n\t\t}\r\n\t\tthis.currentStaticSound = 0;\r\n\t\treturn this.currentStaticSound;\r\n\t}\r\n\r\n\tfindFreeDynamicSlot() {\r\n\t\tfor (let i = 0; i < this.maxDynamicSounds; i++) {\r\n\t\t\tif (this.dynamicSounds[i] == -1 || typeof this.dynamicSounds[i] === 'undefined') {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.currentDynamicSound < this.maxDynamicSounds) {\r\n\t\t\tthis.currentDynamicSound++;\r\n\t\t\treturn this.currentDynamicSound;\r\n\t\t}\r\n\t\tthis.currentDynamicSound = 0;\r\n\t\treturn this.currentDynamicSound;\r\n\t}\r\n\r\n\tfindDynamicSound(file) {\r\n\t\tfor (let i = 0; i < this.dynamicSounds.length; i++) {\r\n\t\t\tif (this.dynamicSounds[i].file == file) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tplay(file) {\r\n\t\tlet slot = 0,\r\n\t\t\treuse = 0;\r\n\t\tif (this.reuseSounds) {\r\n\t\t\tslot = this.findDynamicSound(file);\r\n\t\t\treuse = true;\r\n\t\t}\r\n\t\tif (slot == -1 || this.reuseSounds == false) {\r\n\t\t\tslot = this.findFreeDynamicSlot();\r\n\t\t\treuse = false;\r\n\t\t}\r\n\t\tif (typeof this.dynamicSounds[slot] === 'undefined') {\r\n\t\t\tif (reuse == false) {\r\n\t\t\t\tthis.dynamicSounds[slot] = new SoundItem(file, this.directional);\r\n\t\t\t\tconsole.log('Created sound');\r\n\t\t\t}\r\n\t\t} else if (reuse == false) {\r\n\t\t\t\tthis.dynamicSounds[slot].sound.destroy();\r\n\t\t\t\tthis.dynamicSounds[slot] = new SoundItem(file, directional);\r\n\t\t\t\tconsole.log('Destroyed and reloaded');\r\n\t\t}\r\n\t\tconsole.log('playing sound');\r\n\t\tthis.dynamicSounds[slot].sound.play();\r\n\t}\r\n\r\n\tupdate(position) {\r\n\t\tif (this.directional == true) {\r\n\t\t\tfor (let i = 0; i < this.dynamicSounds.length; i++) {\r\n\t\t\t\tthis.dynamicSounds[i].sound.pos(position.x, position.y, position.z);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tfor (var i = 0; i < this.dynamicSounds.length; i++) {\r\n\tconsole.log('destroying' + i);\r\n\tthis.dynamicSounds[i].destroy();\r\n\tthis.dynamicSounds.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.staticSounds.length; i++) {\r\n\tthis.staticSounds[i].destroy();\r\n\tconsole.log('destroying' + i);\r\n\tthis.staticSounds.splice(i, 1);\r\n\t\t}\r\n\t}\r\n}\r\nclass SoundItem {\r\n\tconstructor(file, threeD = false) {\r\n\t\tthis.file = file;\r\n\t\tthis.threeD = threeD;\r\n\t\tif (this.threeD == true) {\r\n\t\t\tthis.sound = new SoundSource(file, 0, 0, 0);\r\n\t\t} else {\r\n\t\t\tthis.sound = so.create(file);\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\tthis.sound.destroy();\r\n\t}\r\n}\r\n\r\nexport {SoundHandler};\r\n","function Timer(callbacks, step) {\r\n\tlet last = 0;\r\n\tlet active = false;\r\n\tlet acc = 0;\r\n\tlet tick = 0;\r\n\tlet inc = step || 1 / 120;\r\n\tlet frameId;\r\n\r\n\tfunction onFrame(time) {\r\n\t\tif (last !== null) {\r\n\t\t\tacc += (time - last) / 1000;\r\n\t\t\twhile (acc > inc) {\r\n        callbacks.update(inc, tick);\r\n        tick += 1;\r\n        acc -= inc;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlast = time;\r\n    callbacks.render();\r\n    if (active) {\r\n    \tframeId = requestAnimationFrame(onFrame);\r\n    }\r\n\t}\r\n\r\n\tfunction start() {\r\n\t\tlast = null;\r\n\t\tactive = true;\r\n\t\tframeId = requestAnimationFrame(onFrame);\r\n\t}\r\n\r\n\tfunction stop() {\r\n\t\tactive = false;\r\n    cancelAnimationFrame(frameId);\r\n    console.log(frameId);\r\n\t}\r\n\tfunction change(value) {\r\n\t\tinc = value || 1 / 120;\r\n\t\tacc = inc;\r\n\t\ttick = 0;\r\n  stop();\r\n  start();\r\n\t}\r\n\treturn {\r\n\t\tstart,\r\n\t\tstop,\r\n\t\tchange\r\n\t};\r\n}\r\n\r\nmodule.exports = Timer;\r\n","'use strict';\r\nimport fs from 'fs';\r\nimport os from 'os';\r\nimport {speech} from './tts';\r\nimport {data,actionKeys} from './main';\r\nimport {pack, packdir,save} from './main';\r\nimport $ from 'jquery';\r\nimport {OldTimer} from './oldtimer';\r\n// Var os=require('os');\r\nimport {SoundHandler} from './soundHandler';\r\nimport {utils} from './utilities';\r\nimport {so} from './soundObject';\r\nimport {st} from './stateMachine';\r\nimport Timer from './timer';\r\nimport {ScrollingText} from './scrollingText';\r\n// Var fs=require('fs');\r\nimport {KeyboardInput} from './input.js';\r\nimport {KeyEvent} from './keycodes.js';\r\n\r\nclass Game {\r\n\tconstructor() {\r\n\tthis.totalScore=[];\r\n\tthis.totalAverage=[];\r\n\tso.directory=\"./sounds/\",\r\n\tthis.scoreAverage=[];\r\n\tthis.levelAverage=[];\r\n\tthis.scoreCounter=so.create(\"cling\");\r\n\tso.directory=\"\";\r\n\t\tthis.canPause = true;\r\n\t\t\r\n\t\tthis.actionCompleted = false;\r\n\t\tthis.toDestroy = new Array();\r\n\t\tthis.scoreTimer = new OldTimer();\r\n\t\tvar that = this;\r\n\t\t$(document).on('blur', () => {\r\n\t\tthat.pause();\r\n\t\t});\r\n\t\tthis.pauseTime = 0;\r\n\t\tthis.timer = null;\r\n\t\tthis.music = null;\r\n\t\tthis.score = 0;\r\n\t\tthis.pool = new SoundHandler();\r\n\t\tthis.bpms = null;\r\n\t\tthis.level = 0;\r\n\t\tthis.fileData = null;\r\n\t\tthis.input = new KeyboardInput();\r\n\t\tthis.input.init();\r\n\t\tthis.levels = null;\r\n\t\tvar that = this;\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetup() {\r\n\t\tif (fs.existsSync(packdir + 'bpm.txt')) {\r\n\t\t\tthis.fileData = fs.readFileSync(packdir + 'bpm.txt', 'utf8');\r\n\t\t} else {\r\n\t\t\tconst error = new ScrollingText('There was an error loading the pack ' + this.pack + '.', '\\n', (() => {\r\n\t\t\t\tst.setState(2);\r\n\t\t\t}));\r\n\t\t}\r\n\t\tthis.bpms = this.fileData.split(',');\r\n\t\tthis.levels = this.bpms.length - 1;\r\n\t\tif (this.bpms[this.levels] == '') {\r\n\t\t\tthis.levels--;\r\n\t\t}\r\n\t\tthis.level++;\r\n\t\tso.directory = '';\r\n\t\tif (fs.existsSync(packdir + 'nlevel.ogg')) {\r\nso.enqueue(packdir + 'nlevel');\r\n}\r\nif (fs.existsSync(packdir + 'win.ogg')) {so.enqueue(packdir + 'win');\r\n\t\t}\r\n\t\tif (fs.existsSync(packdir + 'fail.ogg')) {\r\nso.enqueue(packdir + 'fail');\r\n\t\t}\r\n\t\tfor (let i = 1; i <= 10; i++) {\r\n\t\t\tif (fs.existsSync(packdir + 'a' + i + '.ogg')) {\r\n\t\tso.enqueue(packdir + 'a' + i);\r\n\t\tthis.actions = i;\r\n\t\t\t}\r\n\t\t\tif (fs.existsSync(packdir + 'o' + i + '.ogg')) {\r\n\t\tso.enqueue(packdir + 'o' + i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.keys = actionKeys;\r\n\t\tconst that = this;\r\n    \t\t\t\t\tthis.timer = Timer({update(dt) {\r\n that.update(dt);\r\n\t\t}, render() {\r\n that.render();\r\n\t\t}}, this.bpms[this.level] / 1000.0);\r\n    \t\t\t\t\tso.setQueueCallback(() => {\r\n    \t\t\t\t\tso.directory = './sounds/';\r\n    \t\t\t\t\tthat.setupLevel();\r\n    \t\t\t\t\t});\r\n    \t\t\t\t\tthis.queueLevels();\r\nso.loadQueue();\r\n\t}\r\n\r\n\tupdate(dt) {\r\n\t\tif (this.currentAction == 0) {\r\n\t\t\tthis.currentAction++;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.actionCompleted && this.action > 1) {\r\n\t\t\t\tthis.fail();\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tthis.currentAction++;\r\n\t\t// Action and level checks go here\r\n\t\tif (this.currentAction >= this.numberOfActions) {\r\n\t\t\tso.directory = '';\r\n\tso.destroy(packdir + this.level + 'music');\r\n\t\tso.destroy(packdir + 'pre' + this.level);\r\n\t\tso.directory = './sounds/';\r\n\t\t\r\n\t\tthis.level++;\r\nthis.timer.stop();\r\nthis.setupLevel();\r\nreturn;\r\n\t\t}\r\n\t\tthis.action = utils.randomInt(1, this.actions);\r\n\t\tthis.actionCompleted = false;\r\n\t\tso.directory = '';\r\n\tthis.pool.playStatic(packdir + 'a' + this.action, 0);\r\n\tso.directory = './sounds/';\r\n\t//\t\tIf (this.action==1) this.actionCompleted=true;//freeze\r\n\t\tthis.scoreTimer.reset();\r\n\t}\r\n\tdoScore() {\r\n\t}\r\n\r\n\tasync fail() {\r\n\t//todo: display results and add beatcoins\r\n\tthis.doScore();\r\n\t\tthis.timer.stop();\r\n\t\tconst snd = this.music;\r\n\t\tso.directory = '';\r\n\t\tconst failsound = this.pool.playStatic(packdir + 'fail', 0);\r\n\t\tso.directory = './sounds/';\r\n\t\tfor (let i = snd.playbackRate; i > 0; i -= 0.05) {\r\n\t\t\tsnd.playbackRate = i;\r\n\t\t\tawait utils.sleep(30);\r\n\t\t}\r\n\t\tsnd.unload();\r\n\t\twhile (this.pool.staticSounds[failsound].sound.playing) {\r\n\t\t\tawait utils.sleep(10);\r\n\t\t\tif (this.input.isDown(KeyEvent.DOM_VK_RETURN)) {\r\n\t\t\t\tthis.pool.staticSounds[failsound].sound.unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tso.resetQueue();\r\nso.resetQueuedInstance();\r\nso.kill(() => {\r\nst.setState(2);\r\n});\r\n\t}\r\n\r\n\tasync quit() {\r\n\tthis.doScore();\r\n\t\tthis.timer.stop();\r\n\t\tconst snd = this.music;\r\n\t\tfor (let i = snd.playbackRate; i > 0; i -= 0.045) {\r\n\t\t\tsnd.playbackRate = i;\r\n\t\t\tawait utils.sleep(30);\r\n\t\t}\r\n\t\t\t\tsnd.unload();\r\n\t\t\t\tso.resetQueue();\r\nso.resetQueuedInstance();\r\nso.kill(() => {\r\nst.setState(2);\r\n});\r\n\t\t\t}\r\n\r\n\trender() {\r\n\t\tif (this.input.isJustPressed(KeyEvent.DOM_VK_Q)) {\r\n\tthis.quit();\r\n\treturn;\r\n\t\t}\r\n\t\tif (this.input.isJustPressed(KeyEvent.DOM_VK_P)) {\r\n\t\tthis.pause();\r\n\t\treturn;\r\n\t\t}\r\n\t\t\t\tthis.handleKeys();\r\n\t}\r\n\r\n\thandleKeys() {\r\n\t\tif (this.actionCompleted) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst keys = this.input.keysPressed();\r\n\t\tif (keys.length > 0 && this.action == 1) {\r\n\tthis.fail();\r\n\treturn;\r\n\t\t}\r\n\t\tif (keys.length > 1) {\r\n\t\tthis.fail();\r\n\t\treturn;\r\n\t\t}\r\n\t\tif (keys.length == 1 && keys[0] == this.keys[this.action]) {\r\n\t\t\tso.directory = '';\r\n\tthis.pool.playStatic(packdir + 'o' + this.action, 0);\r\n\tso.directory = './sounds/';\r\n\tthis.actionCompleted = true;\r\n\tthis.calculateScore();\r\n\treturn;\r\n\t\t}\r\n\t\tif (keys.length == 1 && keys[0] != this.keys[this.action]) {\r\n\t\t\t\t\t\tthis.fail();\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync setupLevel() {\r\n\tif (this.level>1) {\r\n\t\r\n\t}\r\n\tthis.scoreAverage=[];\r\n\tthis.levelAverage=[];\r\n\tif (this.level>this.levels) {\r\n\t\t\t\tif (fs.existsSync(packdir + 'win.ogg')) {\r\n\t\t\t\t\t\t\t\t\tso.directory = '';\r\n\t\t\t\t\t\t\r\n\t\t\tthis.winSound = so.create(packdir + 'win');\r\n\t\t\tthis.winSound.play();\r\nwhile (this.winSound.playing==true) {\r\n\t\t\tawait utils.sleep(5);\r\n\t\t\t\t\t\tif (this.input.isJustPressed(KeyEvent.DOM_VK_RETURN)) {\r\n\t\tthis.winSound.stop();\r\n\t\t\t}//key\r\n\t\t}//while\r\n\t\t}//if file exists\r\n\t\tdata.unlocks[pack][\"win\"]=true;\r\n\t\t\t\tsave();\r\n\t\t\t\tthis.doScore();\r\n\t\tso.kill(() => {\r\nst.setState(2);\r\n});\r\nreturn;\r\n\t}//winning\r\n\t\tthis.canPause = true;\r\n\t\tif (data.unlocks[pack][\"level\"]<this.level) {\r\n\t\tdata.unlocks[pack][\"level\"]=this.level;\r\n\t\t\t\tsave();\r\n\t\t}\r\n\t\tthis.playing = false;\r\n\t\tif (fs.existsSync(packdir + 'pre' + this.level + '.ogg')) {\r\n\t\t\tso.directory = '';\r\n\t\t\tthis.preSound = so.create(packdir + 'pre' + this.level);\r\n\t\t\tso.directory = './sounds/';\r\nthis.preSound.play();\r\nthis.playing = true;\r\n\t\t}\r\n\t\tif (fs.existsSync(packdir + 'nlevel.ogg') && !this.playing && this.level > 1) {\r\n\t\t\tso.directory = '';\r\n\t\t\tthis.preSound = so.create(packdir + 'nlevel');\r\n\t\t\tso.directory = './sounds/';\r\nthis.preSound.play();\r\nthis.playing = true;\r\n\t\t}\r\n\t\tif (this.playing) {\r\n\t\tthis.queueLevels();\r\n\t\twhile (this.preSound.playing) {\r\n\t\t\tawait utils.sleep(5);\r\n\t\t\tif (this.input.isJustPressed(KeyEvent.DOM_VK_RETURN)) {\r\n\t\tthis.preSound.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\tso.directory = '';\r\n\t\tconst that = this;\r\n\t\tthis.music = so.create(packdir + this.level + 'music',false);\r\n\t\tthis.music.loop = true;\r\n\t\tso.directory = './sounds/';\r\nthis.music.play();\r\n\tthis.timer.change(that.bpms[that.level] / 1000.0);\r\n\tif (!this.playing && this.level > 1) {\r\n\t\t\t\t\t\t\t\t\tthis.queueLevels();\r\n\t}\r\n\tthis.action = 0;\r\n\tthis.actionCompleted = false;\r\n\tthis.currentAction = 0;\r\n\tif (!this.playing && this.level > 1) {\r\n\t\tthis.currentAction++;\r\n\t}\r\n\tthis.numberOfActions = utils.randomInt(6 + this.level, this.level * 2 + 6);\r\n\t}\r\n\r\n\tunload() {\r\n\t}\r\n\r\n\tasync pause() {\r\n\t\tif (!this.canPause) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.canPause = false;\r\n\t\tconst snd = this.music;\r\nthis.timer.stop();\r\nthis.scoreTimer.pause();\r\nthis.pauseTime = snd.currentTime;\r\nfor (let i = snd.playbackRate; i > 0; i -= 0.05) {\r\n\tsnd.playbackRate = i;\r\n\tawait utils.sleep(30);\r\n}\r\n\t\tsnd.pause();\r\n\t\twhile (!this.input.isDown(KeyEvent.DOM_VK_P)) {\r\n\t\t\tawait utils.sleep(10);\r\n\t\t}\r\n\t\tthis.unpause();\r\n\t}\r\n\r\n\tasync unpause() {\r\n\t\tconst snd = this.music;\r\nsnd.play();\r\nfor (let i = snd.playbackRate; i <= 1; i += 0.05) {\r\n\tsnd.playbackRate = i;\r\n\tawait utils.sleep(8);\r\n}\r\n\t\tsnd.seek(this.pauseTime);\r\n\t\tthis.timer.start();\r\n\t\tthis.scoreTimer.resume();\r\n\t\tthis.input.keysPressed(); // We need this so that it doesn't fail immediately after unpause if you switch windows.\r\n\t}\r\n\r\n\tcalculateScore() {\r\n\t\tconst bpm = this.bpms[this.level];\r\n\t\tconst time = this.scoreTimer.elapsed;\r\n\t\tconst score = Math.ceil(((bpm / 2) - Math.abs((bpm / 2) - time)) / (bpm / 2) * 100);\r\n\t\t\t\tthis.scoreCounter.pitch=utils.progressPitch(score,100);\r\n\t\tthis.scoreCounter.stop();\r\n\t\tthis.scoreCounter.play();\r\n\t\tconst mod = Math.ceil((2200 * score) / bpm);\r\n//speech.speak(mod);\r\nthis.score += mod;\r\n\t}\r\n\r\n\tqueueLevels() {\r\n\t\tlet levelLimit = this.level + 1;\r\n\t\tif (this.levels < levelLimit) {\r\n\t\t\tlevelLimit = this.levels;\r\n\t\t}\r\n\t\tso.directory = '';\r\n\t\tfor (let i = this.level; i <= levelLimit; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tso.enqueue(packdir + i + 'music');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (fs.existsSync(packdir + 'pre' + i + '.ogg')) {\r\n\t\tso.enqueue(packdir + 'pre' + i);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t}\r\n\t\tif (this.level > 1) {\r\n\t\t\tso.setQueueCallback(0);\r\n\t\tso.loadQueue();\r\n\t\tso.directory = './sounds/';\r\n\t\t}\r\n\t}\r\n}\r\nexport {Game};\r\n","'use strict';\r\nlet event = new KeyboardInput();\r\n\r\nimport {KeyboardInput} from './input';\r\nimport {speech} from './tts';\r\nimport {listenPack,checkPack, learnPack, browsePacks} from './main';\r\nimport {Menu} from './menuHandler';\r\nimport $ from 'jquery';\r\nimport {so} from './soundObject';\r\nimport {KeyEvent} from './keycodes';\r\nimport {Game} from './game';\r\n\r\nclass StateMachine {\r\n\tconstructor() {\r\n\t\tthis.state = 0;\r\n\t\tthis.currentState = 0;\r\n\t}\r\n\r\n\tsetState(state) {\r\n\t\tif (state == 1) {\r\n\t\t\tevent = new KeyboardInput();\r\n\tevent.init();\r\n\tconst intro = so.create('logo');\r\n\tconst that = this;\r\n\tintro.volume = 0.5;\r\n\tintro.play();\r\n\tintro.sound.once('end', () => {\r\n\t\tintro.unload();\r\n\t$(document).off('keydown');\r\n\t\t\tthat.setState(2);\r\n\t});\r\n\t$(document).keydown(event => {\r\n\t\tif (event.which == KeyEvent.DOM_VK_SPACE || event.which == KeyEvent.DOM_VK_ESCAPE) {\r\n\t\t\t\t\t\tintro.unload();\r\n\t\t\t\t\t$(document).off('keydown');\r\n\t\t\tthat.setState(2);\r\n\t\t}\r\n\t});\r\n\tthis.state = state;\r\n\t\t} else if (state == 2) {\r\n\t\t\tevent = null;\r\ncheckPack();\r\nthis.state = state;\r\n\t\t} else if (state == 3) {\r\n\t\t\tthis.currentState = new Game();\r\n\t\t\tthis.state = state;\r\n\t\t} else if (state == 4) {\r\n learnPack();\r\n\t\t}\r\n\t\telse if (state==7) { listenPack(); }\r\n\t\t// New states\r\n\t\telse if (state == 5) {\r\nbrowsePacks();\r\nthis.state = state;\r\n\t\t}\r\n\t\telse if (state == 6) {\r\nbrowsePacks(2);\r\nthis.state = state;\r\n\t\t}\r\n\t\telse if (state == 8) {\r\nbrowsePacks(3);\r\nthis.state = state;\r\n\t\t}\r\n\t}\r\n}\r\nconst st = new StateMachine();\r\nexport {st};\r\nimport {mainMenu} from './menuHandler';\r\n","'use strict';\r\n\r\nimport {so} from './soundObject';\r\nimport {data} from './main';\r\nimport {langs, lang} from './main';\r\nimport {st} from './stateMachine';\r\nimport {strings} from './strings';\r\nimport {MenuItem} from './menuItem';\r\nimport {pack, packdir, rebuildHashes, downloadPacks} from './main';\r\n\r\nimport {Menu} from './menu';\r\nexport async function mainMenu() {\r\nconst fs=require('fs');\r\n\tspeech.webTTS=true;\r\n\tconst items = new Array();\r\n\titems.push(new MenuItem(0, strings.get( 'mStart')));\r\nitems.push(new MenuItem(1, strings.get( 'mLearn')));\r\nitems.push(new MenuItem(2, strings.get( 'mBrowse',[data.beatcoins])));\r\nitems.push(new MenuItem(5, strings.get( 'mBrowseUnlocked')));\r\nitems.push(new MenuItem(7, strings.get( 'mBrowseIncompleted')));\r\nitems.push(new MenuItem(4, strings.get( 'mDownload')));\r\nitems.push(new MenuItem(6, strings.get( 'mUnlocked',[data.unlocks[pack][\"level\"]])));\r\nitems.push(new MenuItem(3, strings.get( 'mHashes')));\r\nso.directory = './sounds/';\r\nconst mainMenu = new Menu(strings.get(\"mainmenu\"), items);\r\nso.directory = '';\r\nmainMenu.music = packdir + 'loop';\r\nif (fs.existsSync(packdir + 'select.ogg')) {\r\n\tmainMenu.sndChoose.unload();\r\n\tmainMenu.sndChoose = so.create(packdir + 'select');\r\n}\r\n\tmainMenu.run(s => {\r\n\t\tso.directory = './sounds/';\r\n\t\tswitch (s.selected) {\r\n\t\t\tcase 0: st.setState(3); break;\r\n\t\t\tcase 1: st.setState(4); break;\r\n\t\t\tcase 2:\r\n\t\tst.setState(5); break;\r\n\t\t\tcase 3: rebuildHashes(); break;\r\n\t\t\tcase 4: downloadPacks(); break;\r\n\t\t\tcase 5:\r\n\t\tst.setState(6); break;\r\n\t\tcase 6:\r\n\t\tst.setState(7); break;\r\n\t\tcase 7:\r\n\t\tst.setState(8); break;\r\n\t\t\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n}\r\n","import $ from 'jquery';\r\nimport Cryptr from 'cryptr';\r\nlet boot=false;\r\nimport {Player} from './player';\r\nimport {MenuItem} from './menuItem';\r\nimport {Menu} from './menu';\r\nimport 'hash-files';\r\nimport walk from 'fs-walk';\r\nimport os from 'os';\r\nimport {mainMenu} from './menuHandler';\r\nimport {ScrollingText} from './scrollingText';\r\nimport {strings} from './strings';\r\nimport {SoundHandler} from './soundHandler';\r\nimport {speech} from './tts';\r\nimport {utils} from './utilities';\r\nimport {so} from './soundObject';\r\nimport {KeyEvent} from './keycodes';\r\nimport {st} from './stateMachine';\r\n// Import test from './test.js'\r\nexport var actionKeys = [0, 0, KeyEvent.DOM_VK_SPACE, KeyEvent.DOM_VK_TAB, KeyEvent.DOM_VK_RETURN, KeyEvent.DOM_VK_BACK_SPACE, KeyEvent.DOM_VK_UP, KeyEvent.DOM_VK_DOWN, KeyEvent.DOM_VK_RIGHT, KeyEvent.DOM_VK_LEFT];\r\nexport var mangle = new Cryptr('sdf jkl wer uio');\r\nimport {KeyboardInput} from './input.js';\r\n\r\nexport var lang = 2;\r\nexport var langs = ['', 'english', 'spanish'];\r\nexport var pack = 'default';\r\nexport var data = '';\r\nexport var packdir = os.homedir() + '/beatpacks/' + pack + '/';\r\ndocument.addEventListener('DOMContentLoaded', setup);\r\nso.debug = true;\r\nfunction setup() {\r\ncash(2000,0,function() {\r\nst.setState(2);\r\n});\r\nreturn;\r\n\tst.setState(1);\r\n}\r\nfunction proceed() {\r\n\tconst sound = so.create('memtest');\r\n\tsound.volume = 0.3;\r\n\t\tsound.play();\r\n\t\tso.destroy('memtest');\r\n}\r\n// St.setState(1);\r\n// document.removeEventListener(\"DOMContentLoaded\",setup);\r\n\r\nexport async function learnPack() {\r\nconst fs=require('fs');\r\n\tconst pool = new SoundHandler();\r\n\tlet actions = 0;\r\n\tfor (let i = 1; i <= 10; i++) {\r\n\t\tif (fs.existsSync(packdir + 'a' + i + '.ogg')) {\r\n\t\t\tactions = i;\r\n\t\t}\r\n\t}\r\n\tspeech.speak(strings.get( 'mActions', [actions]));\r\n\tconst event = new KeyboardInput();\r\n\t\t\t\tevent.init();\r\n\t\t\t\tso.directory = '';\r\n\t\t\t\twhile (!event.isJustPressed(KeyEvent.DOM_VK_Q)) {\r\n\t\t\t\t\tawait utils.sleep(10);\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[2])) {\r\npool.playStatic(packdir + 'a' + 2, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[3])) {\r\npool.playStatic(packdir + 'a' + 3, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[4])) {\r\npool.playStatic(packdir + 'a' + 4, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[5])) {\r\npool.playStatic(packdir + 'a' + 5, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[6])) {\r\npool.playStatic(packdir + 'a' + 6, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[7])) {\r\npool.playStatic(packdir + 'a' + 7, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[8])) {\r\npool.playStatic(packdir + 'a' + 8, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(actionKeys[9])) {\r\npool.playStatic(packdir + 'a' + 9, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event.isJustPressed(KeyEvent.DOM_VK_PERIOD)) {\r\npool.playStatic(packdir + 'a' + 1, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpool.destroy();\r\n\t\t\t\tso.directory = './sounds/';\r\n\t\t\t\tst.setState(2);\r\n}\r\nexport async function browsePacks(browsing = 1) {\r\nconst fs=require('fs');\r\n\tif (!fs.existsSync(os.homedir() + '/beatpacks/hashes.db')) {\r\n\t\tvar error = 0;\r\n\t\tif (lang == 1) {\r\n\t\t\terror = new ScrollingText('The packs folder hashes need to be rebuilt to continue. This can take a few seconds...', '\\n', (() => {\r\n rebuildHashes();\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif (lang == 2) {\r\n\t\t\terror = new ScrollingText('Para continuar, debo reconstruir la carpeta de packs. Esto puede tardar unos segundos...', '\\n', (() => {\r\n rebuildHashes();\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\ttry {\r\n\t\tvar packs = JSON.parse(mangle.decrypt(fs.readFileSync(os.homedir() + '/beatpacks/hashes.db')));\r\n\t} catch (err) {\r\n\t\tvar error = 0;\r\n\t\tif (lang == 1) {\r\n\t\t\terror = new ScrollingText('The packs folder hashes need to be rebuilt to continue. This can take a long while, so go get a coffee or something...', '\\n', (() => {\r\n rebuildHashes();\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif (lang == 2) {\r\n\t\t\terror = new ScrollingText('Para continuar, debo reconstruir la carpeta de packs. Esto puede tardar un buen rato así que ves a por un café o algo...', '\\n', (() => {\r\n rebuildHashes();\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tlet timeout = -1;\r\n\tconst browseArray = [];\r\n\tlet browsePosition = -1;\r\n\tif (browsing > 0) {\r\npacks.forEach((i, v) => {\r\n\tif (fs.existsSync(os.homedir() + '/beatpacks/' + i.name + '/bpm.txt')) {\r\nif (browsing==1) {\r\nif (typeof data.unlocks[i.name]===\"undefined\") {\r\nbrowseArray.push(i);\r\n}\r\n\r\n}\r\nelse if (browsing==2) {\r\nif (typeof data.unlocks[i.name]!==\"undefined\") {\r\nbrowseArray.push(i);\r\n}\r\n}\r\nelse if (browsing==3) {\r\nif (typeof data.unlocks[i.name]!==\"undefined\" && !data.unlocks[i.name][\"win\"]) {\r\nbrowseArray.push(i);\r\n}\r\n}\r\n\r\n\t}\r\n});\r\n\t}\r\n\tso.directory = '';\r\n\tif (browseArray.length === 0) {\r\n\tso.directory=\"./sounds/\";\r\n\t\tnew ScrollingText(strings.get( 'nopacks'), '\\n', function(){\r\n\t\tst.setState(2);\r\n\t\t});\r\n\t\treturn;\r\n\t}\r\nbrowseArray.sort((a, b) => {\r\n\tconst nameA = a.name.toLowerCase();\r\n\tconst nameB = b.name.toLowerCase();\r\n\tif (nameA < nameB) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (nameA > nameB) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n});\r\nconst event = new KeyboardInput();\r\nevent.init();\r\nlet snd;\r\nif (lang == 1) {\r\nspeech.speak('ready. showing ' + browseArray.length + ' packs. Press arrows to move, left arrow to exit, enter to choose a pack, or the first letter of a packs name.');\r\n}\r\nif (lang == 2) {\r\nspeech.speak('listo. Mostrando ' + browseArray.length + ' packs. Pulsa flechas para moverte, flecha izquierda para salir, enter para elegir uno, o la primera letra del nombre de un pack.');\r\n}\r\nconst exitNow = 0;\r\nwhile (!event.isJustPressed(KeyEvent.DOM_VK_LEFT) && browsing > 0) {\r\n// Enter\r\n\tif (event.isJustPressed(KeyEvent.DOM_VK_RETURN)) {\r\n\t\tif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n\t\t}\r\n\t\tif (timeout != -1) {\r\nclearTimeout(timeout);\r\n\t\t}\r\n\t\tif (browsePosition != -1) {\r\n\t\t\tvar size = 0;\r\nwalk.filesSync(os.homedir() + '/beatpacks/' + browseArray[browsePosition].name, (pb, pf, stat) => {\r\n\tsize += stat.size;\r\n});\r\nif (size != browseArray[browsePosition].hash) {\r\n\tbrowsing = 0;\r\n// Todo: remove from unlocked\r\ndata.unlocks[browsePosition.name]=null;\r\nspeech.speak(strings.get( 'tamperWarning'));\r\nsetTimeout(() => {\r\nspeech.speak(strings.get( 'tamperWarning'));\r\n}, 4500);\r\nwhile (!event.isJustPressed(KeyEvent.DOM_VK_RETURN)) {\r\n\tawait utils.sleep(10);\r\n}\r\n}\r\nif (browsing > 0) {\r\n\tpack = browseArray[browsePosition].name;\r\n\t\tboot=false;\r\n\tdata.pack = pack;\r\n\tif (typeof data.unlocks[pack]===\"undefined\") {\r\n\tdata.unlocks[pack]={ \r\n\t\t\t\"level\":0,\r\n\t\t\t\"insurance\":0,\r\n\t\t\t\"fails\":0,\r\n\t\t\t\"win\":false,\r\n\t\t\t\"average\":0,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\tpackdir = os.homedir() + '/beatpacks/' + pack + '/';\r\n\tboot=false;\r\n\tso.directory = './sounds/';\r\nsave();\r\nso.kill(() => {\r\nst.setState(2);\r\n});\r\nreturn;\r\n}\r\n\t\t}\r\n\t}\r\n\t// Down arrow\r\n\tif (event.isJustPressed(KeyEvent.DOM_VK_DOWN)) {\r\n\t\tif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n\t\t}\r\n\t\tif (timeout != -1) {\r\nclearTimeout(timeout);\r\n\t\t}\r\n\t\tbrowsePosition++;\r\n\t\tif (browsePosition > browseArray.length - 1) {\r\n\t\t\tbrowsePosition = 0;\r\n\t\t}\r\nspeech.speak(browsePosition);\r\nif (lang == 1) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' levels.');\r\n}\r\nif (lang == 2) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' niveles.');\r\n}\r\ntimeout = setTimeout(() => {\r\n\tsnd = so.create(browseArray[browsePosition].preview);\r\nsnd.play();\r\n}, 1000);\r\n\t}\r\n\tvar chars = event.getChars();\r\n\tif (chars != '') {\r\n\t\t// First letter\r\n\t\tvar stop = false;\r\nbrowseArray.forEach((v, i) => {\r\n\tconst str = v.name.toLowerCase();\r\n\tif (str.slice(0, 1) == chars[0]) {\r\n\t\tif (!stop) {\r\n\t\t\tbrowsePosition = i;\r\n\t\t}\r\n\t\tstop = true;\r\n\t}\r\n});\r\nif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n}\r\nif (timeout != -1) {\r\nclearTimeout(timeout);\r\n}\r\nif (lang == 1) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' levels.');\r\n}\r\nif (lang == 2) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' niveles.');\r\n}\r\ntimeout = setTimeout(() => {\r\n\tsnd = so.create(browseArray[browsePosition].preview);\r\nsnd.play();\r\n}, 1000);\r\n\t}\r\n\t// Up arrow\r\n\tif (event.isJustPressed(KeyEvent.DOM_VK_UP)) {\r\n\t\tif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n\t\t}\r\n\t\tif (timeout != -1) {\r\nclearTimeout(timeout);\r\n\t\t}\r\n\t\tbrowsePosition--;\r\n\r\n\t\tif (browsePosition < 0) {\r\n\t\t\tbrowsePosition = browseArray.length - 1;\r\n\t\t}\r\n\t\t// Speech.speak(browsePosition);\r\n\t\tif (lang == 1) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' levels.');\r\n\t\t}\r\n\t\tif (lang == 2) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' niveles.');\r\n\t\t}\r\n\t\ttimeout = setTimeout(() => {\r\n\t\t\tsnd = so.create(browseArray[browsePosition].preview);\r\nsnd.play();\r\n\t\t}, 1000);\r\n\t}\r\n\tawait utils.sleep(5);\r\n}\r\nif (timeout != -1) {\r\nclearTimeout(-1);\r\n}\r\nso.directory = './sounds/';\r\nso.kill(() => {\r\nst.setState(2);\r\n});\r\n}\r\nexport async function rebuildHashes(silent = false) {\r\nconst fs=require('fs');\r\n// Var hash=require('hash-files');\r\n\tlet corrupts = '';\r\n\t// Var walk=require('fs-walk');\r\n\t\tlet newHash = 0;\r\n\tconst packs = new Array();\r\n\tso.directory = '';\r\nwalk.dirsSync(os.homedir() + '/beatpacks', (pb, pf, stat, next) => {\r\n\tif (!fs.existsSync(pb + '/' + pf + '/bpm.txt')) {\r\n\t\tcorrupts += '\\n' + pf;\r\n\t\treturn; // Discard non packs\r\n\t}\r\n\tlet theFiles = 0;\r\n\tconst path = pb + '/' + pf + '/';\r\nwalk.filesSync(path, (pb, pf, stat) => {\r\n\ttheFiles += stat.size;\r\n});\r\nnewHash = theFiles;\r\nconst fileData = fs.readFileSync(path + 'bpm.txt', 'utf8');\r\nconst levelsa = fileData.split(',');\r\nlet levels = levelsa.length - 1;\r\nif (levelsa[levels] == '') {\r\n\tlevels--;\r\n}\r\nconst temp = {\r\n\tname: pf,\r\n\tpreview: path + 'name',\r\n\tlevels,\r\n\thash: newHash\r\n};\r\npacks.push(temp);\r\n});\r\nso.directory = './sounds/';\r\nlet write = JSON.stringify(packs);\r\nwrite = mangle.encrypt(write);\r\nfs.writeFileSync(os.homedir() + '/beatpacks/hashes.db', write);\r\nif (silent) {\r\nreturn packs;\r\n}\r\nif (corrupts != '') {\r\n\tif (lang == 1) {\r\n\t\tif (!silent) {\r\n\t\t\tnew ScrollingText('one thing before you go... the following packs are corrupt and should be looked at.' + corrupts, '\\n', (() => {\r\n\t\t\t\tif (!silent) {\r\nst.setState(2);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\tif (lang == 2) {\r\n\t\tif (!silent) {\r\n\t\t\tnew ScrollingText('Antes de que te vayas... los siguientes packs están corruptos y deberías echar un vistazo a ver qué pasa.' + corrupts, '\\n', (() => {\r\n\t\t\t\tif (!silent) {\r\nst.setState(2);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n} else if (!silent) {\r\nst.setState(2);\r\n}\r\n}\r\nexport function question(text,localizedValues=[]) {\r\nconst items=new Array();\r\n\t\t\titems.push(new MenuItem(-1,strings.get(text,localizedValues)));\r\n\titems.push(new MenuItem(0,strings.get(\"yes\",)));\r\n\titems.push(new MenuItem(0,strings.get(\"no\",)));\r\n\t\tso.directory = './sounds/';\r\n\t\t\tlet dm=new Menu(strings.get(\"mSelect\"),items);\r\n\t\t\tso.directory = '';\r\n\t\tdm.run(s=>{\r\n\t\t\t\t\t\tso.directory = './sounds/';\r\ndm.destroy();\r\n\t\t\t\t\t\tswitch(s.selected) {\r\n\t\t\t\t\t\t\tcase 0:\r\nreturn true;\r\n\t\t\tbreak;\r\n\t\t\tcase 1:\r\nreturn false;\r\nbreak;\r\n}\r\n});\r\n}\r\nexport function checkPack() {\r\nconst fs=require('fs');\r\n\ttry {\r\n\t\tdata = JSON.parse(fs.readFileSync(os.homedir() + '/beatpacks/save.dat'));\r\n\t} catch (err) {\r\n\t\tdata = new Player();\r\n\t}\r\n\tpack = data.pack;\r\n\tboot=false;\r\n\tpackdir = os.homedir() + '/beatpacks/' + pack + '/';\r\n\tactionKeys = data.actionKeys;\r\nsave();\r\nif (!fs.existsSync(packdir + 'bpm.txt')) {\r\n\tpack = 'default';\r\n\tboot=false;\r\n\tpackdir = os.homedir() + '/beatpacks/' + pack + '/';\r\n}\r\nif (!fs.existsSync(packdir + 'bpm.txt')) {\r\n\tconst text = new ScrollingText(strings.get( 'packError'), '\\n', (() => {\r\ndownloadPacks(['default']);\r\n\t}));\r\n\treturn;\r\n\t}\r\n\tbooter();\r\n}\r\nvar download = function(url, dest, cb) {\r\nconst http=require('http');\r\n  var file = fs.createWriteStream(dest);\r\n  var request = http.get(url, function(response) {\r\n    response.pipe(file);\r\n    file.on('finish', function() {\r\n      file.close();\r\n      cb();\r\n    });\r\n  });\r\n}\r\nexport async function downloadPacks(arr = []) {\r\nconst fs=require('fs');\r\n\t\tif (arr.length == 0) {\r\n\t\tconst dlList = new Array();\r\n\t\tlet remoteHashes;\r\n\t\tlet localHashes;\r\n\t\tlocalHashes = await rebuildHashes(true);\r\n\t\tawait fetch('http://oriolgomez.com/beatpacks/hashes.db')\r\n\t\t\t\t\t\t .then(event => event.text())\r\n\t\t\t.then(data => {\r\n\t\t\t\tremoteHashes = JSON.parse(mangle.decrypt(data));\r\nconsole.log(remoteHashes.length);\r\n\t\t\t});\r\n\t\t// Ok\r\n\t\tconst browseArray = [];\r\n\t\tconst browsePosition = -1;\r\n\t\tlet size = 0;\r\n\t\t\tremoteHashes.forEach((i, v) => {\r\n\t\t\t\tlet shouldPush = false;\r\n\t\t\t\tfor (let l = 0; l < localHashes.length; l++) {\r\n\tif (i.name == localHashes[l].name && i.hash == localHashes[l].hash) {\r\n\t\t\t\t\t\tshouldPush = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tshouldPush = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldPush) {\r\n\t\t\t\t\t\t\t\t\tbrowseArray.push(i);\r\n\t\t\t\t\t\t\t\t\tsize += i.hash;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t// Create downloader menu here\r\n\t\tif (browseArray.length<1) {\r\n\t\t\tnew ScrollingText(strings.get(\"nodown\"),\"\\n\",function() {st.setState(2)});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\tconst downloadSelections = new Array();\r\nlet sizeS;\r\n\t\t\tsize = size / 1024 / 1024;\r\n\t\t\tsizeS=\"mb\"\r\n\t\tif (size>1024) {\r\n\t\t\tsize=size/1024\r\n\t\t\tsizeS=\"gb\";\r\n\t\t}\r\n\t\t\tsize=size.toFixed(2);\r\n//\t\t\tconsole.log(\"size: \"+size+sizeS+\" \"+browseArray.length+\" packs\");\r\n\t\t\tconst items=new Array();\r\n\t\t\titems.push(new MenuItem(-1,strings.get(\"mFound\",[browseArray.length])));\r\n\titems.push(new MenuItem(0,strings.get(\"mDownloadAll\",[size,sizeS])));\r\n\t\titems.push(new MenuItem(1,strings.get(\"mDownloadList\",[browseArray.length])));\r\n\t\titems.push(new MenuItem(2,strings.get(\"mBack\")));\r\n\t\tso.directory = './sounds/';\r\n\t\t\tlet dm=new Menu(strings.get(\"mSelect\"),items);\r\n\t\t\tso.directory = '';\r\n\t\t\tlet anotherSelected=false;\r\n\t\tdm.run(s=>{\r\n\t\t\t\t\t\tso.directory = './sounds/';\r\n\t\t\t\t\t\tswitch(s.selected) {\r\n\t\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tdm.destroy();\r\n\t\t\t\t\t\t\t//anotherSelected=true;\r\n\t\t\t\t\t\t\tlet dls=new Array();\r\n\t\t\t\t\t\t\tbrowseArray.forEach(function(i) {\r\n\t\t\t\t\t\t\t\tdls.push(i.name);\r\n\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tdownloadPacks(dls);\r\n\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tdm.destroy();\r\n\t\t\tanotherSelected=true;\r\nst.setState(2);\r\nbreak;\r\ncase 1:\r\ndm.destroy();\r\n//browse menu start\r\nlet timeout = -1;\r\n\t\tlet browsePosition = -1;\r\n\t\tbrowseArray.forEach((i)=> {\r\n\t\ti.selected=false;\r\n\t\t});//forEach\r\nvar selected=[];\r\nso.directory=\"./sounds/\";\r\nlet snds=so.create(\"ui/selected\");\r\nso.directory = '';\r\nbrowseArray.sort((a, b) => {\r\n\tconst nameA = a.name.toLowerCase();\r\n\tconst nameB = b.name.toLowerCase();\r\n\tif (nameA < nameB) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (nameA > nameB) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n});\r\nlet event = new KeyboardInput();\r\nevent.init();\r\n\r\nlet snd;\r\nif (lang == 1) {\r\nspeech.speak('ready. Browsing ' + browseArray.length + ' downloadable packs. Press arrows to move, space to select, p to preview, q to exit, enter to start download, or the first letter of a packs name to move to it.');\r\n}\r\nif (lang == 2) {\r\nspeech.speak('listo. tienes ' + browseArray.length + ' packs disponibles. Pulsa flechas para moverte, p para previsualizar, espacio para seleccionar, q para salir, enter para empezar descarga, o pulsa la primera letra del nombre de un pack para moverte a él.');\r\n}\r\nlet browsing=1;\r\nlet size=0;\r\nevent.justPressedEventCallback=function(evt){\r\n//space\r\nif (evt==KeyEvent.DOM_VK_SPACE) {\r\nif (browsePosition!=-1) {\r\nif (browseArray[browsePosition].selected) {\r\nbrowseArray[browsePosition].selected=false;\r\nsize-=browseArray[browsePosition].hash;\r\n}\r\nelse if (browseArray[browsePosition].selected==false) {\r\nbrowseArray[browsePosition].selected=true;\r\nsnds.play();\r\nsize+=browseArray[browsePosition].hash;\r\n}\r\nlet sizeS;\r\nlet dSize;\r\nif (size<=0) sizeS=\"bytes\";\r\n\t\t\tdSize = size / 1024 / 1024;\r\n\t\t\tconsole.log(dSize);\r\n\t\t\tsizeS=\"mb\"\r\n\t\tif (dSize>1024) {\r\n\t\t\tdSize=size/1024\r\n\t\t\tsizeS=\"gb\";\r\n\t\t}\r\n\t\tif (size<=0) sizeS=\"bytes\";\r\n\t\tdSize=Math.ceil(dSize);\r\n\t\t\tspeech.speak(dSize+\" \"+sizeS+\" total\");\r\n}\r\n}\r\n//Enter\r\n\tif (evt==KeyEvent.DOM_VK_RETURN) {\r\n\tif (browsing==0) return\r\n\t\tselected.splice();\r\n\tbrowseArray.forEach((i)=> {\r\n\tif (i.selected) {\r\n\tselected.push(i.name);\r\n\t\t}\r\n\t});\r\n\tif (selected.length>0) {\r\n\t\tif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n\t\t}\r\n\t\t\t\t\t\tbrowsing=0;\r\n\t\t\t\t\t\tevent.justPressedEventCallback=null;\r\n\t\t\t\t\t\tevent.charEventCallback=null;\r\n\t\t\t\t\t\tdownloadPacks(selected);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t// Down arrow\r\n\tif (evt==KeyEvent.DOM_VK_DOWN) {\r\n\t\tif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n\t\t}\r\n\t\tbrowsePosition++;\r\n\t\tif (browsePosition > browseArray.length - 1) {\r\n\t\t\tbrowsePosition = 0;\r\n\t\t}\r\n\t\tif (browseArray[browsePosition].selected) { snds.stop(); snds.play(); }\r\nif (lang == 1) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' levels.');\r\n}\r\nif (lang == 2) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' niveles.');\r\n}\r\n\t}\r\n\t// Up arrow\r\n\tif (evt==KeyEvent.DOM_VK_UP) {\r\n\t\tif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n\t\t}\r\n\t\tbrowsePosition--;\r\n\t\tif (browsePosition < 0) {\r\n\t\t\tbrowsePosition = browseArray.length - 1;\r\n\t\t}\r\n\t\tif (browseArray[browsePosition].selected) { snds.stop(); snds.play(); }\r\n\t\t\t\tif (lang == 1) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' levels.');\r\n\t\t}\r\n\t\tif (lang == 2) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' niveles.');\r\n\t\t}\r\n\t\t\t}\r\n};\r\n\t\t// First letter\r\n\t\t\t\tevent.charEventCallback=function(char) {\r\n\t\t\t\t\t\tvar stop = false;\r\nbrowseArray.forEach((v, i) => {\r\n\tlet str = v.name.toLowerCase();\r\n\tif (str.slice(0, 1) == char) {\r\n\t\tif (!stop) {\r\n\t\t\tbrowsePosition = i;\r\n\t\t}\r\n\t\tstop = true;\r\n\t}\r\n});\r\nif (typeof snd !== 'undefined') {\r\nsnd.destroy();\r\n}\r\nif (browseArray[browsePosition].selected) { snds.stop(); snds.play(); }\r\nif (lang == 1) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' levels.');\r\n}\r\nif (lang == 2) {\r\nspeech.speak(browseArray[browsePosition].name + '. ' + browseArray[browsePosition].levels + ' niveles.');\r\n}\r\n\t}\r\n\t//browse menu end\r\n\t\treturn;\r\n\t}\r\n\t\t\t});\r\n\tif (anotherSelected) return;\r\n\t}\r\n\telse if (arr.length > 0) {\r\n\t\tso.directory = './sounds/';\r\n\t\tconst prog = so.create('progress');\r\nvar toDownload = [];\r\n\tspeech.speak(strings.get( 'dling', [i + 1, arr.length]));\r\n\tlet percent=0;\r\nlet prevPercent=0;\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\tvar name = arr[i];\r\n\t\t//toDownload[name] = [];\r\n\t\tpercent=Math.floor(utils.percent(i, arr.length));\r\n\t\t\t\tif (percent>prevPercent+20) {\r\n\t\tprevPercent=percent;\r\n\t\tif (arr.length>5) speech.speak(strings.get(\"retrieving\")+percent+\"%\"); //speak only if getting a few packs, getting 1 or 2 is fast.\r\n}\r\n\t\t\r\n\t\t\t\t\t\t\t\t await fetch(' http://oriolgomez.com/beatpacks/index.php?p=' + arr[i])\r\n\t\t\t\t\t\t .then(event => event.text())\r\n\t\t\t.then(data => {\r\nconst datas = data.split('\\n');\r\ndatas.forEach(i => {\r\n\tif (i != '') {\r\ntoDownload.push(name+\"/\"+i);\r\n\t\t\r\n\t}\r\n});\r\n\t\t\t});\r\n\t\t\t\t\t\t \t\t}// End for loop\r\n\tlet dir = os.homedir() + '/beatpacks/';\r\n\tlet url = 'http://oriolgomez.com/beatpacks/';\r\n\tvar dlCounter=0;\r\n\tvar dests=[];\r\n\tfor (var i in toDownload) {\r\n\tvar ii=i;\r\n\t\t\ti=toDownload[i];\r\n\t\t\tif (i==\"\") continue;\r\n\t\t\t\t\t\tdir = os.homedir() + '/beatpacks/';\r\n\tvar dirsplit=i.split(\"/\");\r\n\t\t\t\t\t\tif (fs.existsSync(dir + i)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"unlink\"+dir+i);\r\n\t\tfs.unlinkSync(dir + i);\r\n\t\t}\r\n\t\tif (!fs.existsSync(dir+dirsplit[0])) {\r\nfs.mkdirSync(dir+dirsplit[0]);\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tdir = os.homedir() + '/beatpacks/'+i;\r\n\t\t\turl = 'http://oriolgomez.com/beatpacks/'+i;\r\ntoDownload[ii]=url;\r\ndests.push(dir);\r\n\t\t\t}\r\n\t\t\t\t\t\tconsole.log(\"going to start download\");\r\n\t\t\t\t\t\tspeech.speak(strings.get(\"dfiles\",[toDownload.length]));\r\n\t\t\t\t\t\tpercent=0;\r\nprevPercent=0;\r\n\t\t\t\t\t\tlet currentIndex=0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet event=new KeyboardInput();\r\n\t\t\t\t\t\tevent.init();\r\n\t\t\t\t\t\tevent.justPressedEventCallback=function() {\r\n\t\t\t\t\t\t\t\t\t\t\t\tpercent=utils.percent(currentIndex, toDownload.length).toFixed(1);\r\n\t\t\t\t\t\t\t\t\t\tspeech.speak(percent+\"%\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(percent+\"%\");\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar threads = 3;\r\nrequire('async').eachOfLimit(toDownload, threads, function(fileUrl, index,next){\r\n\t\t  download(fileUrl, dests[index],next);\r\n\t\t  currentIndex=index;\r\n\t\t  \t\t    \r\n\t\t  \t\t  }, function() {\r\n\t\t     \t\t     \tspeech.speak(strings.get( 'dlingdone'));\r\n\tconsole.log(\"exiting function\");\r\n\trebuildHashes(true);\r\n\tevent.justPressedEventCallback=null;\r\n\tso.directory = './sounds/';\r\n\tst.setState(2);\r\n\t\t\t     })\r\n\t\t\t     \r\n\t\t\t\t}// If length > 1\r\n}\r\nexport function save() {\r\nconst fs=require('fs');\r\n\tif (!fs.existsSync(os.homedir() + '/beatpacks')) {\r\nfs.mkdirSync(os.homedir() + '/beatpacks');\r\n\t}\r\n\tconst write = JSON.stringify(data);\r\n// Write=mangle.encrypt(write);\r\nfs.writeFileSync(os.homedir() + '/beatpacks/save.dat', write);\r\n}\r\nexport function listenPack() {\r\nconst fs=require('fs');\r\nlet inp=new KeyboardInput();\r\ninp.init();\r\nlet pos=0;\r\nlet fileData;\r\nlet bpms;\r\nlet mus;\r\nlet levels;\r\nso.directory=\"./sounds/\";\r\nlet lock=so.create(\"locked\");\r\nso.directory=\"\";\r\nlet unlocked=data.unlocks[pack][\"level\"]\r\nif (unlocked==0) unlocked=1; //first level is always unlocked even if you haven't played it\r\n\tif (fs.existsSync(packdir + 'bpm.txt')) {\r\n\t\t\tfileData = fs.readFileSync(packdir + 'bpm.txt', 'utf8');\r\n\t\t} else {\r\n\t\t\tconst error = new ScrollingText('There was an error loading the pack ' + pack + '.', '\\n', (() => {\r\n\t\t\t\tst.setState(2);\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\treturn;\r\n\t\t}\r\n\t\tbpms = fileData.split(',');\r\n\t\tlevels = bpms.length - 1;\r\n\t\t\t\tif (bpms[levels] == '') {\r\n\t\t\tlevels--;\r\n\t\t}\r\n\t\tspeech.speak(strings.get(\"mListen\",[unlocked]));\r\n\t\tinp.justPressedEventCallback=function(evt) {\r\n\t\tlock.stop();\r\nif (typeof mus!==\"undefined\") mus.destroy();\r\n\r\n\t\tif (evt==KeyEvent.DOM_VK_LEFT) {\r\n\t\tinp.justPressedEventCallback=null;\r\n\t\tst.setState(2);\r\n\t\treturn;\r\n\t\t}\r\n\t\t//down\r\n\t\telse if (evt==KeyEvent.DOM_VK_DOWN) {\r\npos++;\r\n\t\tif (pos > levels) {\r\n\t\tpos = 1;\r\n\t\t}\r\n\t\tif (pos>unlocked) {\r\n\t\tlock.play();\r\n\t\t}\r\n\t\telse {\r\n\t\tmus=so.create(packdir + pos + 'music',true);\r\n\t\tmus.loop=true;\r\n\t\tmus.play();\r\n\t\t}\r\n\t\t}\r\n\t\t\t\t//up\r\n\t\telse if (evt==KeyEvent.DOM_VK_UP) {\r\npos--;\r\n\t\tif (pos <= 0) {\r\n\t\tpos=levels;\r\n\t\t}\r\n\t\tif (pos>unlocked) {\r\n\t\tlock.play();\r\n\t\t}\r\n\t\telse {\r\n\t\tmus=so.create(packdir + pos + 'music',true);\r\n\t\tmus.loop=true;\r\n\t\tmus.play();\r\n\t\t}\r\n\t\t}\r\n\t\t}//callback\r\n\t\t}\r\n\t\texport function booter() {\r\n\t\tconst fs=require('fs');\r\n\t\t//boot crap\r\n//const fs=require('fs');\r\nif (fs.existsSync(packdir + 'boot.ogg') && !boot) {\r\nboot=true;\r\n\t\t\tso.directory = '';\r\nlet bootSound = so.create(packdir + 'boot');\r\nbootSound.sound.once(\"end\",function() {\r\nmainMenu();\r\n});\r\n\t\t\tso.directory = './sounds/';\r\n\t\t\tlet input=new KeyboardInput();\r\nbootSound.play();\r\ninput.init();\r\ninput.justPressedEventCallback=function(evt) {\r\nbootSound.sound.off(\"end\");\r\nbootSound.destroy();\r\ninput.justPressedEventCallback=null;\r\nmainMenu();\r\n}\r\ninput.justPressedEventCallback=null;\r\n\t\t}//if file exists\r\n\t\telse {\r\n\t\tmainMenu();\r\n\t\t}\r\n\t\t}\r\n\t\tasync function cash(c1,c2,callback) {\r\n\t\t\t//data.beatcoins+=cash;\r\nlet positive=true;\r\nlet cash=c1-c2;\r\nlet time=370;\r\nif (cash<=0) positive=false;\r\ncash=Math.abs(cash);\r\nso.directory=\"./sounds/\";\r\nlet snd;\r\nif (positive) {\r\nsnd=so.create(\"morecash\");\r\nspeech.speak(strings.get(\"youwin\",[cash]));\r\n}\r\nelse if (!positive) {\r\nsnd=so.create(\"lesscash\");\r\nspeech.speak(strings.get(\"youlose\",[cash]));\r\n}\r\nconsole.log(cash);\r\nawait utils.sleep(400);\r\nif (cash>=1000) {\r\nsnd.play();\r\ncash-=1000;\r\nlet count=0;\r\nif (cash>30000) cash=29000; //play 30 sounds max.\r\nfor (let i=cash;i>=1000; i-=1000) {\r\ntime-=15;\r\nif (time<80) time=80;\r\n}\r\nfor (let i=cash;i>=1000; i-=1000) {\r\ncount++;\r\nsetTimeout(function() {\r\nsnd.play();\r\n},time*count);\r\n}\r\nso.directory=\"\";\r\nif (typeof callback!==\"undefined\") {\r\nsetTimeout(function() {\r\ncallback();\r\n},time*(count+1));\r\n}\r\n}\r\n\t\t}"]}